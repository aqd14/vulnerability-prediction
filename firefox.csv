version|cve_id|title|reporter|impact|description|bug_id
firefox64|CVE-2018-12407|Buffer overflow with ANGLE library when using VertexBuffer11 module|Omair working with iDefense Labs|high|A buffer overflow occurs when drawing and validating elements with the ANGLE graphics library, used for WebGL content, when working with the VertexBuffer11 module. This results in a potentially exploitable crash.|1505973
firefox64|CVE-2018-17466|Buffer overflow and out-of-bounds read in ANGLE library with TextureStorage11|Omair|high|A buffer overflow and out-of-bounds read can occur in TextureStorage11 within the ANGLE graphics library, used for WebGL content. This results in a potentially exploitable crash.|1488295
firefox64|CVE-2018-18492|Use-after-free with select element|Nils|high|A use-after-free vulnerability can occur after deleting a selection element due to a weak reference to the select element in the options collection. This results in a potentially exploitable crash.|1499861
firefox64|CVE-2018-18493|Buffer overflow in accelerated 2D canvas with Skia|Atte Kettunen|high|A buffer overflow can occur in the Skia library during buffer offset calculations with hardware accelerated canvas 2D actions due to the use of 32-bit calculations instead of 64-bit. This results in a potentially exploitable crash.|1504452
firefox64|CVE-2018-18494|Same-origin policy violation using location attribute and performance.getEntries to steal cross-origin URLs|James Lee of Kryptos Logic|high|A same-origin policy violation allowing the theft of cross-origin URL entries when using the Javascript location property to cause a redirection to another site using performance.getEntries(). This is a same-origin policy violation and could allow for data theft. |1487964
firefox64|CVE-2018-18495|WebExtension content scripts can be loaded in about: pages|Kestrel|moderate|WebExtension content scripts can be loaded into about: pages in some circumstances, in violation of the permissions granted to extensions. This could allow an extension to interfere with the loading and usage of these pages and use capabilities that were intended to be restricted from extensions.|1427585
firefox64|CVE-2018-18496|Embedded feed preview page can be abused for clickjacking|Abdulrahman Alqabandi|moderate|When the RSS Feed preview about:feeds page is framed within another page, it can be used in concert with scripted content for a clickjacking attack that confuses users into downloading and executing an executable file from a temporary directory. Note: This issue only affects Windows operating systems. Other operating systems are not affected.|1422231
firefox64|CVE-2018-18497|WebExtensions can load arbitrary URLs through pipe separators|Rob Wu|moderate|Limitations on the URIs allowed to WebExtensions by the browser.windows.create API can be bypassed when a pipe in the URL field is used within the extension to load multiple pages as a single argument. This could allow a malicious WebExtension to opened privileged about: or file: locations.|1488180
firefox64|CVE-2018-18498|Integer overflow when calculating buffer sizes for images|r|low|A potential vulnerability leading to an integer overflow can occur during buffer size calculations for images when a raw value is used instead of the checked value. This can lead to an out-of-bounds write. |1500011
firefox64|CVE-2018-12406|Memory safety bugs fixed in Firefox 64|Mozilla developers and community|critical|Mozilla developers and community members Alex Gaynor, André Bargull, Boris Zbarsky, Christian Holler, Jan de Mooij, Jason Kratzer, Philipp, Ronald Crane, Natalia Csoregi, and Paul Theriault reported memory safety bugs present in Firefox 63. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 64
firefox64|CVE-2018-12405|Memory safety bugs fixed in Firefox 64 and Firefox ESR 60.4|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Diego Calleja, Andrew McCreight, Jon Coppeard, Jed Davis, Natalia Csoregi, Nicolas B. Pierron, and Tyson Smith reported memory safety bugs present in Firefox 63 and Firefox ESR 60.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 64 and Firefox ESR 60.4
firefox63|CVE-2018-12391|HTTP Live Stream audio data is accessible cross-origin|Jun Kokatsu|high|During HTTP Live Stream playback on Firefox for Android, audio data can be accessed across origins in violation of security policies. Because the problem is in the underlying Android service, this issue is addressed by treating all HLS streams as cross-origin and opaque to access. Note: this issue only affects Firefox for Android. Desktop versions of Firefox are unaffected.|1478843
firefox63|CVE-2018-12392|Crash with nested event loops|Nils|high|When manipulating user events in nested loops while opening a document through script, it is possible to trigger a potentially exploitable crash due to poor event handling. |1492823
firefox63|CVE-2018-12393|Integer overflow during Unicode conversion while loading JavaScript|r|high|A potential vulnerability was found in 32-bit builds where an integer overflow during the conversion of scripts to an internal UTF-16 representation could result in allocating a buffer too small for the conversion. This leads to a possible out-of-bounds write. Note: 64-bit builds are not vulnerable to this issue.|1495011
firefox63|CVE-2018-12395|WebExtension bypass of domain restrictions through header rewriting|Rob Wu, Andrew Swan|moderate|By rewriting the Host request headers using the webRequest API, a WebExtension can bypass domain restrictions through domain fronting. This would allow access to domains that share a host that are otherwise restricted.|1467523
firefox63|CVE-2018-12396|WebExtension content scripts can execute in disallowed contexts|Rob Wu|moderate|A vulnerability where a WebExtension can run content scripts in disallowed contexts following navigation or other events. This allows for potential privilege escalation by the WebExtension on sites where content scripts should not be run.|1483602
firefox63|CVE-2018-12397|Missing warning prompt when WebExtension requests local file access|Rob Wu|moderate|"A WebExtension can request access to local files without the warning prompt stating that the extension will ""Access your data for all websites"" being displayed to the user. This allows extensions to run content scripts in local pages without permission warnings when a local file is opened."|1487478
firefox63|CVE-2018-12398|CSP bypass through stylesheet injection in resource URIs|cgvwzq|moderate|By using the reflected URL in some special resource URIs, such as chrome:, it is possible to inject stylesheets and bypass Content Security Policy (CSP).|1460538
firefox63|CVE-2018-12402|WebBrowserPersist uses incorrect origin information|Björn Ruytenberg, 1lastBr3ath|moderate|"The internal WebBrowserPersist code does not use correct origin context for a resource being saved. This manifests when sub-resources are loaded as part of ""Save Page As..."" functionality. For example, a malicious page could recover a visitor's Windows username and NTLM hash by including resources otherwise unreachable to the malicious page, if they can convince the visitor to save the complete web page. Similarly, SameSite cookies are sent on cross-origin requests when the ""Save Page As..."" menu item is selected to save a page, which can result in saving the wrong version of resources based on those cookies."|1447087
firefox63|CVE-2018-12399|Spoofing of protocol registration notification bar|Mathias Wu|low|When a new protocol handler is registered, the API accepts a title argument which can be used to mislead users about which domain is registering the new protocol. This may result in the user approving a protocol handler that they otherwise would not have. |1490276
firefox63|CVE-2018-12400|Favicons are cached in private browsing mode on Firefox for Android|Konark Modi|low|In private browsing mode on Firefox for Android, favicons are cached in the cache/icons folder as they are in non-private mode. This allows information leakage of sites visited during private browsing sessions. Note: this issue only affects Firefox for Android. Desktop versions of Firefox are unaffected.|1448305
firefox63|CVE-2018-12401|DOS attack through special resource URI parsing|Abdulrahman Alqabandi|low|Some special resource URIs will cause a non-exploitable crash if loaded with optional parameters following a '?' in the parsed string. This could lead to denial of service (DOS) attacks.|1422456
firefox63|CVE-2018-12403|Mixed content warning is not displayed when HTTPS page loads a favicon over HTTP|Yiğit Can Yilmaz|low|If a site is loaded over a HTTPS connection but loads a favicon resource over HTTP, the mixed content warning is not displayed to users. |1484753
firefox63|CVE-2018-12388|Memory safety bugs fixed in Firefox 63|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Dana Keeler, Ronald Crane, Marcia Knous, Tyson Smith, Daniel Veditz, and Steve Fink reported memory safety bugs present in Firefox 62. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 63
firefox63|CVE-2018-12390|Memory safety bugs fixed in Firefox 63 and Firefox ESR 60.3|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Bob Owen, Boris Zbarsky, Calixte Denizet, Jason Kratzer, Jed Davis, Taegeon Lee, Philipp, Ronald Crane, Raul Gurzau, Gary Kwong, Tyson Smith, Raymond Forbes, and Bogdan Tara reported memory safety bugs present in Firefox 62 and Firefox ESR 60.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 63 and Firefox ESR 60.3
firefox62.0.3|CVE-2018-12386|Type confusion in JavaScript|Niklas Baumstark, Samuel Groß, Bruno Keith via Beyond Security’s SecuriTeam Secure Disclosure program|critical|A vulnerability in register allocation in JavaScript can lead to type confusion, allowing for an arbitrary read and write. This leads to remote code execution inside the sandboxed content process when triggered.|1493900
firefox62.0.3|CVE-2018-12387||Bruno Keith, Niklas Baumstark via Beyond Security’s SecuriTeam Secure Disclosure program|critical|A vulnerability where the JavaScript JIT compiler inlines Array.prototype.push with multiple arguments that results in the stack pointer being off by 8 bytes after a bailout. This leaks a memory address to the calling function which can be used as part of an exploit inside the sandboxed content process.|1493903
firefox62.0.2|CVE-2018-12385|Crash in TransportSecurityInfo due to cached data|Philipp|moderate|A potentially exploitable crash in TransportSecurityInfo used for SSL can be triggered by data stored in the local cache in the user profile directory. This issue is only exploitable in combination with another vulnerability allowing an attacker to write data into the local cache or from locally installed malware. This issue also triggers a non-exploitable startup crash for users switching between the Nightly and Release versions of Firefox if the same profile is used.|1490585
firefox62|CVE-2018-12377|Use-after-free in refresh driver timers|Nils|high|A use-after-free vulnerability can occur when refresh driver timers are refreshed in some circumstances during shutdown when the timer is deleted while still in use. This results in a potentially exploitable crash.|1470260
firefox62|CVE-2018-12378|Use-after-free in IndexedDB|Zhanjia Song|high|A use-after-free vulnerability can occur when an IndexedDB index is deleted while still in use by JavaScript code that is providing payload values to be stored. This results in a potentially exploitable crash.|1459383
firefox62|CVE-2018-18499|Same-origin policy violation using meta refresh and performance.getEntries to steal cross-origin URLs|James Lee of Kryptos Logic|high|"A same-origin policy violation allowing the theft of cross-origin URL entries when using a <meta> meta http-equiv=""refresh"" on a page to cause a redirection to another site using performance.getEntries(). This is a same-origin policy violation and could allow for data theft.  "|1468523
firefox62|CVE-2018-12379|Out-of-bounds write with malicious MAR file|Holger Fuhrmannek|moderate|When the Mozilla Updater opens a MAR format file which contains a very long item filename, an out-of-bounds write can be triggered, leading to a potentially exploitable crash. This requires running the Mozilla Updater manually on the local system with the malicious MAR file in order to occur. |1473113
firefox62|CVE-2017-16541|Proxy bypass using automount and autofs|Filippo Cavallarin|moderate|Browser proxy settings can be bypassed by using the automount feature with autofs to create a mount point on the local file system. Content can be loaded from this mounted file system directly using a file: URI, bypassing configured proxy settings. Note: this issue only affects OS X in default configurations. On Linux systems, autofs must be installed for the vulnerability to occur and Windows is not affected.|1412081
firefox62|CVE-2018-12381|Dragging and dropping Outlook email message results in page navigation|Jana Squires|low|Manually dragging and dropping an Outlook email message into the browser will trigger a page navigation when the message's mail columns are incorrectly interpreted as a URL. Note: this issue only affects Windows operating systems with Outlook installed. Other operating systems are not affected.|1435319
firefox62|CVE-2018-12382|Addressbar spoofing with javascript URI on Firefox for Android|Jordi Chancel|low|The displayed addressbar URL can be spoofed on Firefox for Android using a javascript: URI in concert with JavaScript to insert text before the loaded domain name, scrolling the loaded domain out of view to the right. This can lead to user confusion. This vulnerability only affects Firefox for Android.|1479311
firefox62|CVE-2018-12383|Setting a master password post-Firefox 58 does not delete unencrypted previously stored passwords|Jurgen Gaeremyn|low|If a user saved passwords before Firefox 58 and then later set a master password, an unencrypted copy of these passwords is still accessible. This is because the older stored password file was not deleted when the data was copied to a new format starting in Firefox 58. The new master password is added only on the new file. This could allow the exposure of stored password data outside of user expectations.|1475775
firefox62|CVE-2018-12375|Memory safety bugs fixed in Firefox 62|Mozilla developers and community|high|Mozilla developers and community members Christian Holler, Looben Yang, Jesse Ruderman, Sebastian Hengst, Nicolas Grunbaum, and Gary Kwong reported memory safety bugs present in Firefox 61. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 62
firefox62|CVE-2018-12376|Memory safety bugs fixed in Firefox 62 and Firefox ESR 60.2|Mozilla developers and community|critical|Mozilla developers and community members Alex Gaynor, Boris Zbarsky, Christoph Diehl, Christian Holler, Jason Kratzer, Jed Davis, Tyson Smith, Bogdan Tara, Karl Tomlinson, Mats Palmgren, Nika Layzell, Ted Campbell, and Andrei Cristian Petcu reported memory safety bugs present in Firefox 61 and Firefox ESR 60.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 62 and Firefox ESR 60.2
firefox61|CVE-2018-12359|Buffer overflow using computed size of canvas element|Nils|critical|A buffer overflow can occur when rendering canvas content while adjusting the height and width of the <canvas> element dynamically, causing data to be written outside of the currently computed boundaries. This results in a potentially exploitable crash.|1459162
firefox61|CVE-2018-12360|Use-after-free when using focus()|Nils|critical|A use-after-free vulnerability can occur when deleting an input element during a mutation event handler triggered by focusing that element. This results in a potentially exploitable crash.|1459693
firefox61|CVE-2018-12361|Integer overflow in SwizzleData|R|critical|An integer overflow can occur in the SwizzleData code while calculating buffer sizes. The overflowed value is used for subsequent graphics computations when their inputs are not sanitized which results in a potentially exploitable crash.|1463244
firefox61|CVE-2018-12358|Same-origin bypass using service worker and redirection|Ben Kelly|high|Service workers can use redirection to avoid the tainting of cross-origin resources in some instances, allowing a malicious site to read responses which are supposed to be opaque.   |1467852
firefox61|CVE-2018-12362|Integer overflow in SSSE3 scaler|F. Alonso (revskills)|high|An integer overflow can occur during graphics operations done by the Supplemental Streaming SIMD Extensions 3 (SSSE3) scaler, resulting in a potentially exploitable crash.|1452375
firefox61|CVE-2018-5156|Media recorder segmentation fault when track type is changed during capture|Nils|high|A vulnerability can occur when capturing a media stream when the media source type is changed as the capture is occuring. This can result in stream data being cast to the wrong type causing a potentially exploitable crash. |1453127
firefox61|CVE-2018-12363|Use-after-free when appending DOM nodes|Nils|high|A use-after-free vulnerability can occur when script uses mutation events to move DOM nodes between documents, resulting in the old document that held the node being freed but the node still having a pointer referencing it. This results in a potentially exploitable crash.|1464784
firefox61|CVE-2018-12364|CSRF attacks through 307 redirects and NPAPI plugins|David Black|high|NPAPI plugins, such as Adobe Flash, can send non-simple cross-origin requests, bypassing CORS by making a same-origin POST that does a 307 redirect to the target site. This allows for a malicious site to engage in cross-site request forgery (CSRF) attacks.|1436241
firefox61|CVE-2018-12365|Compromised IPC child process can list local filenames|Alex Gaynor|moderate|A compromised IPC child process can escape the content sandbox and list the names of arbitrary files on the file system without user consent or interaction. This could result in exposure of private local files. |1459206
firefox61|CVE-2018-12371|Integer overflow in Skia library during edge builder allocation|anonymous|moderate|An integer overflow vulnerability in the Skia library when allocating memory for edge builders on some systems with at least 16 GB of RAM. This results in the use of uninitialized memory, resulting in a potentially exploitable crash.|1465686
firefox61|CVE-2018-12366|Invalid data handling during QCMS transformations|OSS-Fuzz|moderate|An invalid grid size during QCMS (color profile) transformations can result in the out-of-bounds read interpreted as a float value. This could leak private data into the output. |1464039
firefox61|CVE-2018-12367|Timing attack mitigation of PerformanceNavigationTiming|Andrea Marchesini|moderate|In the previous mitigations for Spectre, the resolution or precision of various methods was reduced to counteract the ability to measure precise time intervals. In that work, PerformanceNavigationTiming was not adjusted but it was found that it could be used as a precision timer.|1462891
firefox61|CVE-2018-12368|No warning when opening executable SettingContent-ms files|Abdulrahman Alqabandi|moderate|"Windows 10 does not warn users before opening executable files with the SettingContent-ms extension even when they have been downloaded from the internet and have the ""Mark of the Web."" Without the warning, unsuspecting users unfamiliar with this new file type might run an unwanted executable. This also allows a WebExtension with the limited downloads.open permission to execute arbitrary code without user interaction on Windows 10 systems Note: this issue only affects Windows operating systems. Other operating systems are unaffected."|1468217
firefox61|CVE-2018-12369|WebExtension security permission checks bypassed by embedded experiments|Jonathan Kingston|moderate|WebExtensions bundled with embedded experiments were not correctly checked for proper authorization. This allowed a malicious WebExtension to gain full browser permissions.|1454909
firefox61|CVE-2018-12370|SameSite cookie protections bypassed when exiting Reader View|Jun Kokatsu|low|In Reader View SameSite cookie protections are not checked on exiting. This allows for a payload to be triggered when Reader View is exited if loaded by a malicious site while Reader mode is active, bypassing CSRF protections.|1456652
firefox61|CVE-2018-5186|Memory safety bugs fixed in Firefox 61|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Jason Kratzer, Jon Coppeard, Randell Jesup, Ronald Crane, and Boris Zbarsky reported memory safety bugs present in Firefox 60. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 61
firefox61|CVE-2018-5187|Memory safety bugs fixed in Firefox 61 and Firefox ESR 60.1|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Sebastian Hengst, Nils Ohlmeier, Jon Coppeard, Randell Jesup, Ted Campbell, Gary Kwong, and Jean-Yves Avenard reported memory safety bugs present in Firefox 60 and Firefox ESR 60. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 61 and Firefox ESR 60.1
firefox61|CVE-2018-5188|Memory safety bugs fixed in Firefox 61, Firefox ESR 60.1, and Firefox ESR 52.9|Mozilla developers and community|critical|Mozilla developers and community members Alex Gaynor, Christoph Diehl, Christian Holler, Jason Kratzer, David Major, Jon Coppeard, Nicolas B. Pierron, Jason Kratzer, Marcia Knous, and Ronald Crane reported memory safety bugs present in Firefox 60, Firefox ESR 60, and Firefox ESR 52.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 61, Firefox ESR 60.1, and Firefox ESR 52.9
firefox60.0.2|CVE-2018-6126|Heap buffer overflow rasterizing paths in SVG with Skia|Ivan Fratric of Google Project Zero|high|A heap buffer overflow can occur in the Skia library when rasterizing paths using a maliciously crafted SVG file with anti-aliasing turned off. This results in a potentially exploitable crash.|1462682
firefox60|CVE-2018-5154|Use-after-free with SVG animations and clip paths|Nils|high|A use-after-free vulnerability can occur while enumerating attributes during SVG animations with clip paths. This results in a potentially exploitable crash.|1443092
firefox60|CVE-2018-5155|Use-after-free with SVG animations and text paths|Nils|high|A use-after-free vulnerability can occur while adjusting layout during SVG animations with text paths. This results in a potentially exploitable crash.|1448774
firefox60|CVE-2018-5157|Same-origin bypass of PDF Viewer to view protected PDF files|Wladimir Palant|high|Same-origin protections for the PDF viewer can be bypassed, allowing a malicious site to intercept messages meant for the viewer. This could allow the site to retrieve PDF files restricted to viewing by an authenticated user on a third-party website. |1449898
firefox60|CVE-2018-5158|Malicious PDF can inject JavaScript into PDF Viewer|Wladimir Palant|high|The PDF viewer does not sufficiently sanitize PostScript calculator functions, allowing malicious JavaScript to be injected through a crafted PDF file. This JavaScript can then be run with the permissions of the PDF viewer by its worker.|1452075
firefox60|CVE-2018-5159|Integer overflow and out-of-bounds write in Skia|Ivan Fratric|high|An integer overflow can occur in the Skia library due to 32-bit integer use in an array without integer overflow checks, resulting in possible out-of-bounds writes. This could lead to a potentially exploitable crash triggerable by web content.|1441941
firefox60|CVE-2018-5160|Uninitialized memory use by WebRTC encoder|Andreas Perhson|high|WebRTC can use a WrappedI420Buffer pixel buffer but the owning image object can be freed while it is still in use. This can result in the WebRTC encoder using uninitialized memory, leading to a potentially exploitable crash.|1436117
firefox60|CVE-2018-5152|WebExtensions information leak through webRequest API|Andy McKay|moderate|WebExtensions with the appropriate permissions can attach content scripts to Mozilla sites such as accounts.firefox.com and listen to network traffic to the site through the webRequest API. For example, this allows for the interception of username and an encrypted password during login to Firefox Accounts. This issue does not expose synchronization traffic directly and is limited to the process of user login to the website and the data displayed to the user once logged in.|1415644
firefox60|CVE-2018-5153|Out-of-bounds read in mixed content websocket messages|Dennis Fuchs|moderate|If websocket data is sent with mixed text and binary in a single message, the binary data can be corrupted. This can result in an out-of-bounds read with the read memory sent to the originating server in response. |1436809
firefox60|CVE-2018-5163|Replacing cached data in JavaScript Start-up Bytecode Cache|Nicolas B. Pierron|moderate|If a malicious attacker has used another vulnerability to gain full control over a content process, they may be able to replace the alternate data resources stored in the JavaScript Start-up Bytecode Cache (JSBC) for other JavaScript code. If the parent process then runs this replaced code, the executed script would be run with the parent process' privileges, escaping the sandbox on content processes.|1426353
firefox60|CVE-2018-5164|CSP not applied to all multipart content sent with multipart/x-mixed-replace|Khalil Zhani|moderate|Content Security Policy (CSP) is not applied correctly to all parts of multipart content sent with the multipart/x-mixed-replace MIME type. This could allow for script to run where CSP should block it, allowing for cross-site scripting (XSS) and other attacks. |1416045
firefox60|CVE-2018-5166|WebExtension host permission bypass through filterReponseData|Francois Lajeunesse Robert|moderate|WebExtensions can use request redirection and a filterReponseData filter to bypass host permission settings to redirect network traffic and access content from a host for which they do not have explicit user permission.|1437325
firefox60|CVE-2018-5167|Improper linkification of chrome: and javascript: content in web console and JavaScript debugger|Wladimir Palant|moderate|The web console and JavaScript debugger do not sanitize all output that can be hyperlinked. Both will display chrome: links as active, clickable hyperlinks in their output. Web sites should not be able to directly link to internal chrome pages. Additionally, the JavaScript debugger will display javascript: links, which users could be tricked into clicking by malicious sites. |1447969
firefox60|CVE-2018-5168|Lightweight themes can be installed without user interaction|Wladimir Palant|moderate|Sites can bypass security checks on permissions to install lightweight themes by manipulating the baseURI property of the theme element. This could allow a malicious site to install a theme without user interaction which could contain offensive or embarrassing images. |1449548
firefox60|CVE-2018-5169|Dragging and dropping link text onto home button can set home page to include chrome pages|Abdulrahman Alqabandi|moderate|"If manipulated hyperlinked text with chrome: URL contained in it is dragged and dropped on the ""home"" icon, the home page can be reset to include a normally-unlinkable chrome page as one of the home page tabs. "|1319157
firefox60|CVE-2018-5172|Pasted script from clipboard can run in the Live Bookmarks page or PDF viewer|Abdulrahman Alqabandi|moderate|The Live Bookmarks page and the PDF viewer can run injected script content if a user pastes script from the clipboard into them while viewing RSS feeds or PDF files. This could allow a malicious site to socially engineer a user to copy and paste malicious script content that could then run with the context of either page but does not allow for privilege escalation.|1436482
firefox60|CVE-2018-5173|File name spoofing of Downloads panel with Unicode characters|Abdulrahman Alqabandi|moderate|The filename appearing in the Downloads panel improperly renders some Unicode characters, allowing for the file name to be spoofed. This can be used to obscure the file extension of potentially executable files from user view in the panel. Note: the dialog to open the file will show the full, correct filename and whether it is executable or not. |1438025
firefox60|CVE-2018-5174|Windows Defender SmartScreen UI runs with less secure behavior for downloaded files in Windows 10 April 2018 Update|Jimmy|moderate|In the Windows 10 April 2018 Update, Windows Defender SmartScreen honors the SEE_MASK_FLAG_NO_UI flag associated with downloaded files and will not show any UI. Files that are unknown and potentially dangerous will be allowed to run because SmartScreen will not prompt the user for a decision, and if the user is offline all files will be allowed to be opened because Windows won’t prompt the user to ask what to do. Firefox incorrectly sets this flag when downloading files, leading to less secure behavior from SmartScreen. Note: this issue only affects Windows 10 users running the April 2018 update or later. It does not affect other Windows users or other operating systems.|1447080
firefox60|CVE-2018-5175|Universal CSP bypass on sites using strict-dynamic in their policies|Masato Kinugawa|moderate|A mechanism to bypass Content Security Policy (CSP) protections on sites that have a script-src policy of 'strict-dynamic'. If a target website contains an HTML injection flaw an attacker could inject a reference to a copy of the require.js library that is part of Firefox’s Developer Tools, and then use a known technique using that library to bypass the CSP restrictions on executing injected scripts.|1432358
firefox60|CVE-2018-5176|JSON Viewer script injection|Tadj Youssouf|moderate|The JSON Viewer displays clickable hyperlinks for strings that are parseable as URLs, including javascript: links. If a JSON file contains malicious JavaScript script embedded as javascript: links, users may be tricked into clicking and running this code in the context of the JSON Viewer. This can allow for the theft of cookies and authorization tokens which are accessible to that context.|1442840
firefox60|CVE-2018-5177|Buffer overflow in XSLT during number formatting|Guyio|moderate|A vulnerability exists in XSLT during number formatting where a negative buffer size may be allocated in some instances, leading to a buffer overflow and crash if it occurs. |1451908
firefox60|CVE-2018-5165|Checkbox for enabling Flash protected mode is inverted in 32-bit Firefox|David Parks|low|"In 32-bit versions of Firefox, the Adobe Flash plugin setting for ""Enable Adobe Flash protected mode"" is unchecked by default even though the Adobe Flash sandbox is actually enabled. The displayed state is the reverse of the true setting, resulting in user confusion. This could cause users to select this setting intending to activate it and inadvertently turn protections off."|1451452
firefox60|CVE-2018-5180|heap-use-after-free in mozilla::WebGLContext::DrawElementsInstanced|Nils|low|A use-after-free vulnerability can occur during WebGL operations. While this results in a potentially exploitable crash, the vulnerability is limited because the memory is freed and reused in a brief window of time during the freeing of the same callstack.|1444086
firefox60|CVE-2018-5181|Local file can be displayed in noopener tab through drag and drop of hyperlink|Abdulrahman Alqabandi|low|If a URL using the file: protocol is dragged and dropped onto an open tab that is running in a different child process the tab will open a local file corresponding to the dropped URL, contrary to policy. One way to make the target tab open more reliably in a separate process is to open it with the noopener keyword. |1424107
firefox60|CVE-2018-5182|Local file can be displayed from hyperlink dragged and dropped on addressbar|Jordi Chancel|low|If a text string that happens to be a filename in the operating system's native format is dragged and dropped onto the addressbar the specified local file will be opened. This is contrary to policy and is what would happen if the string were the equivalent file: URL.|1435908
firefox60|CVE-2018-5151|Memory safety bugs fixed in Firefox 60|Mozilla developers and community|critical|Mozilla developers and community members Christoph Diehl, Christian Holler, Jon Coppeard, Jason Kratzer, Nathan Froyd, Paul Theriault, Ryan VanderMeulen, Tyson Smith, Sebastian Hengst, Byron Campen, Emilio Cobos Álvarez, Ronald Crane, and Phillipp reported memory safety bugs present in Firefox 59. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 60
firefox60|CVE-2018-5150|Memory safety bugs fixed in Firefox 60 and Firefox ESR 52.8|Mozilla developers and community|critical|Mozilla developers and community members Christoph Diehl, Randell Jesup, Tyson Smith, Alex Gaynor, Ronald Crane, Julian Hector, Kannan Vijayan, and Jason Kratzer reported memory safety bugs present in Firefox 59 and Firefox ESR 52.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 60 and Firefox ESR 52.8
firefox59.0.2|CVE-2018-5148|Use-after-free in compositor|Jesse Schwartzentruber|high|A use-after-free vulnerability can occur in the compositor during certain graphics operations when a raw pointer is used instead of a reference counted one. This results in a potentially exploitable crash.|1440717
firefox59.0.1|CVE-2018-5146|Out of bounds memory write in libvorbis|Richard Zhu via Trend Micro's Zero Day Initiative|critical|An out of bounds memory write while processing Vorbis audio data was reported through the Pwn2Own contest.|1446062
firefox59.0.1|CVE-2018-5147|Out of bounds memory write in libtremor|Huzaifa Sidhpurwala|critical|The libtremor library has the same flaw as CVE-2018-5146. This library is used by Firefox in place of libvorbis on Android and ARM platforms.|1446365
firefox59|CVE-2018-5127|Buffer overflow manipulating SVG animatedPathSegList|Nils|high|A buffer overflow can occur when manipulating the SVG animatedPathSegList through script. This results in a potentially exploitable crash.|1430557
firefox59|CVE-2018-5128|Use-after-free manipulating editor selection ranges|Nils|high|A use-after-free vulnerability can occur when manipulating elements, events, and selection ranges during editor operations. This results in a potentially exploitable crash.|1431336
firefox59|CVE-2018-5129|Out-of-bounds write with malformed IPC messages|James Grant|high|A lack of parameter validation on IPC messages results in a potential out-of-bounds write through malformed IPC messages. This can potentially allow for sandbox escape through memory corruption in the parent process.|1428947
firefox59|CVE-2018-5130|Mismatched RTP payload type can trigger memory corruption|Tony Paloma|high|When packets with a mismatched RTP payload type are sent in WebRTC connections, in some circumstances a potentially exploitable crash is triggered.|1433005
firefox59|CVE-2018-5131|Fetch API improperly returns cached copies of no-store/no-cache resources|Ben Kelly|moderate|Under certain circumstances the fetch() API can return transient local copies of resources that were sent with a no-store or no-cache cache header instead of downloading a copy from the network as it should. This can result in previously stored, locally cached data of a website being accessible to users if they share a common profile while browsing.|1440775
firefox59|CVE-2018-5132|WebExtension Find API can search privileged pages|Andy McKay|moderate|The Find API for WebExtensions can search some privileged pages, such as about:debugging, if these pages are open in a tab. This could allow a malicious WebExtension to search for otherwise protected data if a user has it open.|1408194
firefox59|CVE-2018-5133|Value of the app.support.baseURL preference is not properly sanitized|François Lajeunesse-Robert|moderate|If the app.support.baseURL preference is changed by a malicious local program to contain HTML and script content, this content is not sanitized. It will be executed if a user loads chrome://browser/content/preferences/in-content/preferences.xul directly in a tab and executes a search. This stored preference is also executed whenever an EME video player plugin displays a CDM-disabled message as a notification message.|1430511
firefox59|CVE-2018-5134|WebExtensions may use view-source: URLs to bypass content restrictions|Abdulrahman Alqabandi|moderate|WebExtensions may use view-source: URLs to view local file: URL content, as well as content stored in about:cache, bypassing restrictions that only allow WebExtensions to view specific content.|1429379
firefox59|CVE-2018-5135|WebExtension browserAction can inject scripts into unintended contexts|Abdulrahman Alqabandi|moderate|WebExtensions can bypass normal restrictions in some circumstances and use browser.tabs.executeScript to inject scripts into contexts where this should not be allowed, such as pages from other WebExtensions or unprivileged about: pages.|1431371
firefox59|CVE-2018-5136|Same-origin policy violation with data: URL shared workers|Jun Kokatsu|moderate|A shared worker created from a data: URL in one tab can be shared by another tab with a different origin, bypassing the same-origin policy.|1419166
firefox59|CVE-2018-5137|Script content can access legacy extension non-contentaccessible resources|Masato Kinugawa|moderate|A legacy extension's non-contentaccessible, defined resources can be loaded by an arbitrary web page through script. This script does this by using a maliciously crafted path string to reference the resources. Note: this vulnerability does not affect WebExtensions. |1432870
firefox59|CVE-2018-5138|Android Custom Tab address spoofing through long domain names|rugk|low|A spoofing vulnerability can occur when a malicious site with an extremely long domain name is opened in an Android Custom Tab (a browser panel inside another app) and the default browser is Firefox for Android. This could allow an attacker to spoof which page is actually loaded and in use. Note: this issue only affects Firefox for Android. Other versions and operating systems are unaffected.|1432624
firefox59|CVE-2018-5140|Moz-icon images accessible to web content through moz-icon: protocol|Abdulrahman Alqabandi|low|Image for moz-icons can be accessed through the moz-icon: protocol through script in web content even when otherwise prohibited. This could allow for information leakage of which applications are associated with specific MIME types by a malicious page.|1424261
firefox59|CVE-2018-5141|DOS attack through notifications Push API|Zohar|low|A vulnerability in the notifications Push API where notifications can be sent through service workers by web content without direct user interaction. This could be used to open new tabs in a denial of service (DOS) attack or to display unwanted content from arbitrary URLs to users.|1429093
firefox59|CVE-2018-5142|Media Capture and Streams API permissions display incorrect origin with data: and blob: URLs|Jun Kokatsu|low|"If Media Capture and Streams API permission is requested from documents with data: or blob: URLs, the permission notifications do not properly display the originating domain. The notification states ""Unknown protocol"" as the requestee, leading to user confusion about which site is asking for this permission."|1366357
firefox59|CVE-2018-5143|Self-XSS pasting javascript: URL with embedded tab into addressbar|Masato Kinugawa|low|URLs using javascript: have the protocol removed when pasted into the addressbar to protect users from cross-site scripting (XSS) attacks, but if a tab character is embedded in the javascript: URL the protocol is not removed and the script will execute. This could allow users to be socially engineered to run an XSS attack against themselves.|1422643
firefox59|CVE-2018-5126|Memory safety bugs fixed in Firefox 59|Mozilla developers and community|critical|Mozilla developers and community members Calixte Denizet, Christian Holler, Sebastian Hengst, Jason Kratzer, Tyson Smith, Ryan VanderMeulen, Noemi Erli, Karl Tomlinson, Philipp, Gary Kwong, and Ronald Crane reported memory safety bugs present in Firefox 58. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 59
firefox59|CVE-2018-5125|Memory safety bugs fixed in Firefox 59 and Firefox ESR 52.7|Mozilla developers and community|critical|Mozilla developers and community members Bob Clary, Olli Pettay, Christian Holler, Nils Ohlmeier, Randell Jesup, Tyson Smith, Ralph Giles, and Philipp reported memory safety bugs present in Firefox 58 and Firefox ESR 52.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 59 and Firefox ESR 52.7
firefox58|CVE-2018-5091|Use-after-free with DTMF timers|Looben Yang|critical|A use-after-free vulnerability can occur during WebRTC connections when interacting with the DTMF timers. This results in a potentially exploitable crash.  |1423086
firefox58|CVE-2018-5092|Use-after-free in Web Workers|Looben Yang|high|A use-after-free vulnerability can occur when the thread for a Web Worker is freed from memory prematurely instead of from memory in the main thread while cancelling fetch operations. |1418074
firefox58|CVE-2018-5093|Buffer overflow in WebAssembly during Memory/Table resizing|OSS-Fuzz|high|A heap buffer overflow vulnerability may occur in WebAssembly during Memory/Table resizing, resulting in a potentially exploitable crash.|1415291
firefox58|CVE-2018-5094|Buffer overflow in WebAssembly with garbage collection on uninitialized memory|OSS-Fuzz|high|A heap buffer overflow vulnerability may occur in WebAssembly when shrinkElements is called followed by garbage collection on memory that is now uninitialized. This results in a potentially exploitable crash. |1415883
firefox58|CVE-2018-5095|Integer overflow in Skia library during edge builder allocation|Anonymous|high|An integer overflow vulnerability in the Skia library when allocating memory for edge builders on some systems with at least 8 GB of RAM. This results in the use of uninitialized memory, resulting in a potentially exploitable crash. |1418447
firefox58|CVE-2018-5097|Use-after-free when source document is manipulated during XSLT|Nils|high|A use-after-free vulnerability can occur during XSL transformations when the source document for the transformation is manipulated by script content during the transformation. This results in a potentially exploitable crash.|1387427
firefox58|CVE-2018-5098|Use-after-free while manipulating form input elements|Nils|high|A use-after-free vulnerability can occur when form input elements, focus, and selections are manipulated by script content. This results in a potentially exploitable crash.|1399400
firefox58|CVE-2018-5099|Use-after-free with widget listener|Nils|high|A use-after-free vulnerability can occur when the widget listener is holding strong references to browser objects that have previously been freed, resulting in a potentially exploitable crash when these references are used.|1416878
firefox58|CVE-2018-5100|Use-after-free when IsPotentiallyScrollable arguments are freed from memory|Nils|high|A use-after-free vulnerability can occur when arguments passed to the IsPotentiallyScrollable function are freed while still in use by scripts. This results in a potentially exploitable crash.|1417405
firefox58|CVE-2018-5101|Use-after-free with floating first-letter style elements|Nils|high|A use-after-free vulnerability can occur when manipulating floating first-letter style elements, resulting in a potentially exploitable crash.|1417661
firefox58|CVE-2018-5102|Use-after-free in HTML media elements|Nils|high|A use-after-free vulnerability can occur when manipulating HTML media elements with media streams, resulting in a potentially exploitable crash.|1419363
firefox58|CVE-2018-5103|Use-after-free during mouse event handling|Nils|high|A use-after-free vulnerability can occur during mouse event handling due to issues with multiprocess support. This results in a potentially exploitable crash.|1423159
firefox58|CVE-2018-5104|Use-after-free during font face manipulation|Nils|high|A use-after-free vulnerability can occur during font face manipulation when a font face is freed while still in use, resulting in a potentially exploitable crash. |1425000
firefox58|CVE-2018-5105|WebExtensions can save and execute files on local file system without user prompts|Rob Wu|high|WebExtensions can bypass user prompts to first save and then open an arbitrarily downloaded file. This can result in an executable file running with local user privileges without explicit user consent.  |1390882
firefox58|CVE-2018-5106|Developer Tools can expose style editor information cross-origin through service worker|Jun Kokatsu|moderate|Style editor traffic in the Developer Tools can be routed through a service worker hosted on a third party website if a user selects error links when these tools are open. This can allow style editor information used within Developer Tools to leak cross-origin.|1408708
firefox58|CVE-2018-5107|Printing process will follow symlinks for local file access|Alex Gaynor|moderate|The printing process can bypass local access protections to read files available through symlinks, bypassing local file restrictions. The printing process requires files in a specific format so arbitrary data cannot be read but it is possible that some local file information could be exposed. |1379276
firefox58|CVE-2018-5108|Manually entered blob URL can be accessed by subsequent private browsing tabs|Andrea Marchesini|moderate|A Blob URL can violate origin attribute segregation, allowing it to be accessed from a private browsing tab and for data to be passed between the private browsing tab and a normal tab. This could allow for the leaking of private information specific to the private browsing context. This issue is mitigated by the requirement that the user enter the Blob URL manually in order for the access violation to occur.  |1421099
firefox58|CVE-2018-5109|Audio capture prompts and starts with incorrect origin attribution|Andreas Pehrson|moderate|An audio capture session can started under an incorrect origin from the site making the capture request. Users are still prompted to allow the request but the prompt can display the wrong origin, leading to user confusion about which site is making the request to capture an audio stream.|1405599
firefox58|CVE-2018-5110|Cursor can be made invisible on OS X|Ron Warholic|moderate|If cursor visibility is toggled by script using from 'none' to an image and back through script, the cursor will be rendered temporarily invisible within Firefox. Note: This vulnerability only affects OS X. Other operating systems are not affected.|1423275
firefox58|CVE-2018-5111|URL spoofing in addressbar through drag and drop|Mario Gomes|moderate|When the text of a specially formatted URL is dragged to the addressbar from page content, the displayed URL can be spoofed to show a different site than the one loaded. This allows for phishing attacks where a malicious page can spoof the identify of another site. |1321619
firefox58|CVE-2018-5112|Extension development tools panel can open a non-relative URL in the panel|Abdulrahman Alqabandi|moderate|Development Tools panels of an extension are required to load URLs for the panels as relative URLs from the extension manifest file but this requirement was not enforced in all instances. This could allow the development tools panel for the extension to load a URL that it should not be able to access, including potentially privileged pages.|1425224
firefox58|CVE-2018-5113|WebExtensions can load non-HTTPS pages with browser.identity.launchWebAuthFlow|Abdulrahman Alqabandi|moderate|The browser.identity.launchWebAuthFlow function of WebExtensions is only allowed to load content over https: but this requirement was not properly enforced. This can potentially allow privileged pages to be loaded by the extension.|1425267
firefox58|CVE-2018-5114|The old value of a cookie changed to HttpOnly remains accessible to scripts|Inko|moderate|If an existing cookie is changed to be HttpOnly while a document is open, the original value remains accessible through script until that document is closed. Network requests correctly use the changed HttpOnly cookie.|1421324
firefox58|CVE-2018-5115|Background network requests can open HTTP authentication in unrelated foreground tabs|Jerry Decime|moderate|If an HTTP authentication prompt is triggered by a background network request from a page or extension, it is displayed over the currently loaded foreground page. Although the prompt contains the real domain making the request, this can result in user confusion about the originating site of the authentication request and may cause users to mistakenly send private credential information to a third party site.|1409449
firefox58|CVE-2018-5116|WebExtension ActiveTab permission allows cross-origin frame content access|Ronen Zilberman|moderate|WebExtensions with the ActiveTab permission are able to access frames hosted within the active tab even if the frames are cross-origin. Malicious extensions can inject frames from arbitrary origins into the loaded page and then interact with them, bypassing same-origin user expectations with this permission.|1396399
firefox58|CVE-2018-5117|URL spoofing with right-to-left text aligned left-to-right|xisigr of Tencent's Xuanwu Lab|moderate|If right-to-left text is used in the addressbar with left-to-right alignment, it is possible in some circumstances to scroll this text to spoof the displayed URL. This issue could result in the wrong URL being displayed as a location, which can mislead users to believe they are on a different site than the one loaded.  |1395508
firefox58|CVE-2018-5118|Activity Stream images can attempt to load local content through file:|Paul Theriault|moderate|The screenshot images displayed in the Activity Stream page displayed when a new tab is opened is created from the meta tags of websites. An issue was discovered where the page could attempt to create these images through file: URLs from the local file system. This loading is blocked by the sandbox but could expose local data if combined with another attack that escapes sandbox protections.|1420049
firefox58|CVE-2018-5119|Reader view will load cross-origin content in violation of CORS headers|Jun Kokatsu|low|The reader view will display cross-origin content when CORS headers are set to prohibit the loading of cross-origin content by a site. This could allow access to content that should be restricted in reader view.|1420507
firefox58|CVE-2018-5121|OS X Tibetan characters render incompletely in the addressbar|Khalil Zhani|low|Low descenders on some Tibetan characters in several fonts on OS X are clipped when rendered in the addressbar. When used as part of an Internationalized Domain Name (IDN) this can be used for domain name spoofing attacks. Note: This attack only affects OS X operating systems. Other operating systems are unaffected.|1402368
firefox58|CVE-2018-5122|Potential integer overflow in DoCrypt|Casper of Tencent's Xuanwu Lab|low|A potential integer overflow in the DoCrypt function of WebCrypto was identified. If a means was found of exploiting it, it could result in an out-of-bounds write.|1413841
firefox58|CVE-2018-5090|Memory safety bugs fixed in Firefox 58|Mozilla developers and community|critical|Mozilla developers and community members Calixte Denizet, Christian Holler, Alex Gaynor, Yoshi Huang, Bob Clary, Nils Ohlmeier, Jason Kratzer, Jesse Ruderman, Philipp, Mike Taylor, Marcia Knous, Paul Adenot, Randell Jesup, JW Wang, Tyson Smith, Emilio Cobos Álvarez, Ted Campbell, Stephen Fewer, Tristan Bourvon, and Jet Villegas reported memory safety bugs present in Firefox 57. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 58
firefox58|CVE-2018-5089|Memory safety bugs fixed in Firefox 58 and Firefox ESR 52.6|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Jason Kratzer, Marcia Knous, Nathan Froyd, Oriol Brufau, Ronald Crane, Randell Jesup, Tyson Smith, Emilio Cobos Álvarez, Ryan VanderMeulen, Sebastian Hengst, Karl Tomlinson, Xidorn Quan, Ludovic Hirlimann, and Jason Orendorff reported memory safety bugs present in Firefox 57 and Firefox ESR 52.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 58 and Firefox ESR 52.6
firefox57.0.2|CVE-2017-7845|Buffer overflow when drawing and validating elements with ANGLE library using Direct 3D 9|Omair|critical|A buffer overflow occurs when drawing and validating elements using Direct 3D 9 with the ANGLE graphics library, used for WebGL content. This is due to an incorrect value being passed within the library during checks and results in a potentially exploitable crash. Note: This attack only affects Windows operating systems. Other operating systems are unaffected. |1402372
firefox57.0.1|CVE-2017-7843|Web worker in Private Browsing mode can write IndexedDB data|Konark|high|When Private Browsing mode is used, it is possible for a web worker to write persistent data to IndexedDB and fingerprint a user uniquely. IndexedDB should not be available in Private Browsing mode and this stored data will persist across multiple private browsing mode sessions because it is not cleared when exiting.|1410106
firefox57.0.1|CVE-2017-7844|Visited history information leak through SVG image|Daniel Jackson|high|A combination of an external SVG image referenced on a page and the coloring of anchor links stored within this image can be used to determine which pages a user has in their history. This can allow a malicious website to query user history. Note: This issue only affects Firefox 57. Earlier releases are not affected.|1420001
firefox57|CVE-2017-7828|Use-after-free of PressShell while restyling layout|Nils|critical|A use-after-free vulnerability can occur when flushing and resizing layout because the PressShell object has been freed while still in use. This results in a potentially exploitable crash during these operations.|1406750
firefox57|CVE-2017-7830|Cross-origin URL information leak through Resource Timing API|Jun Kokatsu|high|The Resource Timing API incorrectly revealed navigations in cross-origin iframes. This is a same-origin policy violation and could allow for data theft of URLs loaded by users. |1408990
firefox57|CVE-2017-7831|Information disclosure of exposed properties on JavaScript proxy objects|Oriol Brufau|moderate|A vulnerability where the security wrapper does not deny access to some exposed properties using the deprecated exposedProps mechanism on proxy objects. These properties should be explicitly unavailable to proxy objects. |1392026
firefox57|CVE-2017-7832|Domain spoofing through use of dotless 'i' character followed by accent markers|Jonathan Kew|moderate|The combined, single character, version of the letter 'i' with any of the potential accents in unicode, such as acute or grave, can be spoofed in the addressbar by the dotless version of 'i' followed by the same accent as a second character with most font sets. This allows for domain spoofing attacks because these combined domain names do not display as punycode.|1408782
firefox57|CVE-2017-7833|Domain spoofing with Arabic and Indic vowel marker characters|Rayyan Bijoora|moderate|Some Arabic and Indic vowel marker characters can be combined with Latin characters in a domain name to eclipse the non-Latin character with some font sets on the addressbar. The non-Latin character will not be visible to most viewers. This allows for domain spoofing attacks because these combined domain names do not display as punycode.|1370497
firefox57|CVE-2017-7834|data: URLs opened in new tabs bypass CSP protections|Jordi Chancel|moderate|A data: URL loaded in a new tab did not inherit the Content Security Policy (CSP) of the original page, allowing for bypasses of the policy including the execution of JavaScript. In prior versions when data: documents also inherited the context of the original page this would allow for potential cross-site scripting (XSS) attacks. |1358009
firefox57|CVE-2017-7835|Mixed content blocking incorrectly applies with redirects|Ben Kelly|moderate|Mixed content blocking of insecure (HTTP) sub-resources in a secure (HTTPS) document was not correctly applied for resources that redirect from HTTPS to HTTP, allowing content that should be blocked, such as scripts, to be loaded on a page.  |1402363
firefox57|CVE-2017-7836|Pingsender dynamically loads libcurl on Linux and OS X|Ezra Caltum|moderate|"The ""pingsender"" executable used by the Firefox Health Report dynamically loads a system copy of libcurl, which an attacker could replace. This allows for privilege escalation as the replaced libcurl code will run with Firefox's privileges. Note: This attack requires an attacker have local system access and only affects OS X and Linux. Windows systems are not affected."|1401339
firefox57|CVE-2017-7837|SVG loaded as <img> can use meta tags to set cookies|Jun Kokatsu|moderate|SVG loaded through <img> tags can use <meta> tags within the SVG data to set cookies for that page.|1325923
firefox57|CVE-2017-7838|Failure of individual decoding of labels in international domain names triggers punycode display of entire IDN|Corey Bonnell|low|Punycode format text will be displayed for entire qualified international domain names in some instances when a sub-domain triggers the punycode display instead of the primary domain being displayed in native script and the sub-domain only displaying as punycode. This could be used for limited spoofing attacks due to user confusion.|1399540
firefox57|CVE-2017-7839|Control characters before javascript: URLs defeats self-XSS prevention mechanism|Eric Lawrence|low|Control characters prepended before javascript: URLs pasted in the addressbar can cause the leading characters to be ignored and the pasted JavaScript to be executed instead of being blocked. This could be used in social engineering and self-cross-site-scripting (self-XSS) attacks where users are convinced to copy and paste text into the addressbar.|1402896
firefox57|CVE-2017-7840|Exported bookmarks do not strip script elements from user-supplied tags|Hanno Böck|low|JavaScript can be injected into an exported bookmarks file by placing JavaScript code into user-supplied tags in saved bookmarks. If the resulting exported HTML file is later opened in a browser this JavaScript will be executed. This could be used in social engineering and self-cross-site-scripting (self-XSS) attacks if users were convinced to add malicious tags to bookmarks, export them, and then open the resulting file.|1366420
firefox57|CVE-2017-7842|Referrer Policy is not always respected for <link> elements|Jun Kokatsu|low|"If a document’s Referrer Policy attribute is set to ""no-referrer"" sometimes two network requests are made for <link> elements instead of one. One of these requests includes the referrer instead of respecting the set policy to not include a referrer on requests."|1397064
firefox57|CVE-2017-7827|Memory safety bugs fixed in Firefox 57|Mozilla developers and community|critical|Mozilla developers and community members Boris Zbarsky, Carsten Book, Christian Holler, Byron Campen, Jan de Mooij, Jason Kratzer, Jesse Schwartzentruber, Marcia Knous, Randell Jesup, Tyson Smith, and Ting-Yu Chou reported memory safety bugs present in Firefox 56. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 57
firefox57|CVE-2017-7826|Memory safety bugs fixed in Firefox 57 and Firefox ESR 52.5|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, David Keeler, Jon Coppeard, Julien Cristau, Jan de Mooij, Jason Kratzer, Philipp, Nicholas Nethercote, Oriol Brufau, André Bargull, Bob Clary, Jet Villegas, Randell Jesup, Tyson Smith, Gary Kwong, and Ryan VanderMeulen reported memory safety bugs present in Firefox 56 and Firefox ESR 52.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 57 and Firefox ESR 52.5
firefox56|CVE-2017-7793|Use-after-free with Fetch API|Abhishek Arya|high|A use-after-free vulnerability can occur in the Fetch API when the worker or the associated window are freed when still in use, resulting in a potentially exploitable crash.|1371889
firefox56|CVE-2017-7817|Firefox for Android address bar spoofing through fullscreen mode|Raphael Saniyazov|high|A spoofing vulnerability can occur when a page switches to fullscreen mode without user notification, allowing a fake address bar to be displayed. This allows an attacker to spoof which page is actually loaded and in use. Note: This attack only affects Firefox for Android. Other operating systems are not affected.|1356596
firefox56|CVE-2017-7818|Use-after-free during ARIA array manipulation|Nils|high|A use-after-free vulnerability can occur when manipulating arrays of Accessible Rich Internet Applications (ARIA) elements within containers through the DOM. This results in a potentially exploitable crash.|1363723
firefox56|CVE-2017-7819|Use-after-free while resizing images in design mode|Nils|high|A use-after-free vulnerability can occur in design mode when image objects are resized if objects referenced during the resizing have been freed from memory. This results in a potentially exploitable crash.  |1380292
firefox56|CVE-2017-7824|Buffer overflow when drawing and validating elements with ANGLE|Omair, Andre Weissflog|high|A buffer overflow occurs when drawing and validating elements with the ANGLE graphics library, used for WebGL content. This is due to an incorrect value being passed within the library during checks and results in a potentially exploitable crash. |1398381
firefox56|CVE-2017-7805|Use-after-free in TLS 1.2 generating handshake hashes|Martin Thomson|high|During TLS 1.2 exchanges, handshake hashes are generated which point to a message buffer. This saved data is used for later messages but in some cases, the handshake transcript can exceed the space available in the current buffer, causing the allocation of a new buffer. This leaves a pointer pointing to the old, freed buffer, resulting in a use-after-free when handshake hashes are then calculated afterwards. This can result in a potentially exploitable crash.|1377618
firefox56|CVE-2017-7812|Drag and drop of malicious page content to the tab bar can open locally stored files|Tooru Fujisawa|moderate|If web content on a page is dragged onto portions of the browser UI, such as the tab bar, links can be opened that otherwise would not be allowed to open. This can allow malicious web content to open a locally stored file through file: URLs.|1379842
firefox56|CVE-2017-7814|Blob and data URLs bypass phishing and malware protection warnings|François Marier|moderate|File downloads encoded with blob: and data: URL elements bypassed normal file download checks though the Phishing and Malware Protection feature and its block lists of suspicious sites and files. This would allow malicious sites to lure users into downloading executables that would otherwise be detected as suspicious.|1376036
firefox56|CVE-2017-7813|Integer truncation in the JavaScript parser|Abhishek Arya|moderate|Inside the JavaScript parser, a cast of an integer to a narrower type can result in data read from outside the buffer being parsed. This usually results in a non-exploitable crash, but can leak a limited amount of information from memory if it matches JavaScript identifier syntax.|1383951
firefox56|CVE-2017-7825|OS X fonts render some Tibetan and Arabic unicode characters as spaces|Khalil Zhani|moderate|Several fonts on OS X display some Tibetan and Arabic characters as whitespace. When used in the addressbar as part of an IDN this can be used for domain name spoofing attacks. Note: This attack only affects OS X operating systems. Other operating systems are unaffected. |1393624
firefox56|CVE-2017-7815|Spoofing attack with modal dialogs on non-e10s installations|Jose María Acuña|moderate|On pages containing an iframe, the data: protocol can be used to create a modal dialog through Javascript that will have an arbitrary domains as the dialog's location, spoofing of the origin of the modal dialog from the user view. Note: This attack only affects installations with e10 multiprocess turned off. Installations with e10s turned on do not support the modal dialog functionality.|1368981
firefox56|CVE-2017-7816|WebExtensions can load about: URLs in extension UI|Kestrel|moderate|WebExtensions could use popups and panels in the extension UI to load an about: privileged URL, violating security checks that disallow this behavior. |1380597
firefox56|CVE-2017-7821|WebExtensions can download and open non-executable files without user interaction|Abdulrahman Alqabandi|moderate|A vulnerability where WebExtensions can download and attempt to open a file of some non-executable file types. This can be triggered without specific user interaction for the file download and open actions. This could be used to trigger known vulnerabilities in the programs that handle those document types.|1346515
firefox56|CVE-2017-7823|CSP sandbox directive did not create a unique origin|Jun Kokatsu|moderate|The content security policy (CSP) sandbox directive did not create a unique origin for the document, causing it to behave as if the allow-same-origin keyword were always specified. This could allow a Cross-Site Scripting (XSS) attack to be launched from unsafe content. |1396320
firefox56|CVE-2017-7822|WebCrypto allows AES-GCM with 0-length IV|Thanh Bui|low|The AES-GCM implementation in WebCrypto API accepts 0-length IV when it should require a length of 1 according to the NIST Special Publication 800-38D specification. This might allow for the authentication key to be determined in some instances.|1368859
firefox56|CVE-2017-7820|Xray wrapper bypass with new tab and web console|Oriol Brufau|low|The instanceof operator can bypass the Xray wrapper mechanism. When called on web content from the browser itself or an extension the web content can provide its own result for that operator, possibly tricking the browser or extension into mishandling the element.|1378207
firefox56|CVE-2017-7811|Memory safety bugs fixed in Firefox 56|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Jason Kratzer, Tobias Schneider, Tyson Smith, David Keeler, Nicolas B. Pierron, Mike Hommey, Ronald Crane, Tooru Fujisawa, and Philipp reported memory safety bugs present in Firefox 55. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 56
firefox56|CVE-2017-7810|Memory safety bugs fixed in Firefox 56 and Firefox ESR 52.4|Mozilla developers and community|critical|Mozilla developers and community members Christoph Diehl, Jan de Mooij, Jason Kratzer, Randell Jesup, Tom Ritter, Tyson Smith, and Sebastian Hengst reported memory safety bugs present in Firefox 55 and Firefox ESR 52.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 56 and Firefox ESR 52.4
firefox55|CVE-2017-7798|XUL injection in the style editor in devtools|Frederik Braun|critical|The Developer Tools feature suffers from a XUL injection vulnerability due to improper sanitization of the web page source code. In the worst case, this could allow arbitrary code execution when opening a malicious page with the style editor tool.|1371586, 1372112
firefox55|CVE-2017-7800|Use-after-free in WebSockets during disconnection|Looben Yang|critical|A use-after-free vulnerability can occur in WebSockets when the object holding the connection is freed before the disconnection operation is finished. This results in an exploitable crash.|1374047
firefox55|CVE-2017-7801|Use-after-free with marquee during window resizing|Nils|critical|A use-after-free vulnerability can occur while re-computing layout for a marquee element during window resizing where the updated style object is freed while still in use. This results in a potentially exploitable crash.|1371259
firefox55|CVE-2017-7809|Use-after-free while deleting attached editor DOM node|Nils|high|A use-after-free vulnerability can occur when an editor DOM node is deleted prematurely during tree traversal while still bound to the document. This results in a potentially exploitable crash.|1380284
firefox55|CVE-2017-7784|Use-after-free with image observers|Nils|high|A use-after-free vulnerability can occur when reading an image observer during frame reconstruction after the observer has been freed. This results in a potentially exploitable crash.|1376087
firefox55|CVE-2017-7802|Use-after-free resizing image elements|Nils|high|A use-after-free vulnerability can occur when manipulating the DOM during the resize event of an image element. If these elements have been freed due to a lack of strong references, a potentially exploitable crash may occur when the freed elements are accessed.|1378147
firefox55|CVE-2017-7785|Buffer overflow manipulating ARIA attributes in DOM|Nils|high|A buffer overflow can occur when manipulating Accessible Rich Internet Applications (ARIA) attributes within the DOM. This results in a potentially exploitable crash.|1356985
firefox55|CVE-2017-7786|Buffer overflow while painting non-displayable SVG|Nils|high|A buffer overflow can occur when the image renderer attempts to paint non-displayable SVG elements. This results in a potentially exploitable crash.|1365189
firefox55|CVE-2017-7806|Use-after-free in layer manager with SVG|Nils|high|A use-after-free vulnerability can occur when the layer manager is freed too early when rendering specific SVG content, resulting in a potentially exploitable crash.|1378113
firefox55|CVE-2017-7753|Out-of-bounds read with cached style data and pseudo-elements|SkyLined|high|An out-of-bounds read occurs when applying style rules to pseudo-elements, such as ::first-line, using cached style data.|1353312
firefox55|CVE-2017-7787|Same-origin policy bypass with iframes through page reloads|Oliver Wagner|high|Same-origin policy protections can be bypassed on pages with embedded iframes during page reloads, allowing the iframes to access content on the top level page, leading to information disclosure.|1322896
firefox55|CVE-2017-7807|Domain hijacking through AppCache fallback|Mathias Karlsson|high|A mechanism that uses AppCache to hijack a URL in a domain using fallback by serving the files from a sub-path on the domain. This has been addressed by requiring fallback files be inside the manifest directory.|1376459
firefox55|CVE-2017-7792|Buffer overflow viewing certificates with an extremely long OID|Fraser Tweedale|high|A buffer overflow will occur when viewing a certificate in the certificate manager if the certificate has an extremely long object identifier (OID). This results in a potentially exploitable crash.|1368652
firefox55|CVE-2017-7804|Memory protection bypass through WindowsDllDetourPatcher|Stephen Fewer|high|The destructor function for the WindowsDllDetourPatcher class can be re-purposed by malicious code in concert with another vulnerability to write arbitrary data to an attacker controlled location in memory. This can be used to bypass existing memory protections in this situation. Note: This attack only affects Windows operating systems. Other operating systems are not affected.|1372849
firefox55|CVE-2017-7791|Spoofing following page navigation with data: protocol and modal alerts|Jose María Acuña|moderate|On pages containing an iframe, the data: protocol can be used to create a modal alert that will render over arbitrary domains following page navigation, spoofing of the origin of the modal alert from the iframe content.|1365875
firefox55|CVE-2017-7808|CSP information leak with frame-ancestors containing paths|Jun Kokatsu|moderate|A content security policy (CSP) frame-ancestors directive containing origins with paths allows for comparisons against those paths instead of the origin. This results in a cross-origin information leak of this path information.|1367531
firefox55|CVE-2017-7782|WindowsDllDetourPatcher allocates memory without DEP protections|Arthur Edelstein|moderate|"An error in the WindowsDllDetourPatcher where a RWX (""Read/Write/Execute"") 4k block is allocated but never protected, violating DEP protections. Note: This attack only affects Windows operating systems. Other operating systems are not affected."|1344034
firefox55|CVE-2017-7781|Elliptic curve point addition error when using mixed Jacobian-affine coordinates|Antonio Sanso|moderate|An error occurs in the elliptic curve point addition algorithm that uses mixed Jacobian-affine coordinates where it can yield a result POINT_AT_INFINITY when it should not. A man-in-the-middle attacker could use this to interfere with a connection, resulting in an attacked party computing an incorrect shared secret.|1352039
firefox55|CVE-2017-7794|Linux file truncation via sandbox broker|Jann Horn|moderate|On Linux systems, if the content process is compromised, the sandbox broker will allow files to be truncated even though the sandbox explicitly only has read access to the local file system and no write permissions. Note: This attack only affects the Linux operating system. Other operating systems are not affected.|1374281
firefox55|CVE-2017-7803|CSP containing 'sandbox' improperly applied|Rhys Enniks|moderate|When a page’s content security policy (CSP) header contains a sandbox directive, other directives are ignored. This results in the incorrect enforcement of CSP.|1377426
firefox55|CVE-2017-7799|Self-XSS XUL injection in about:webrtc|Frederik Braun|moderate|JavaScript in the about:webrtc page is not sanitized properly being assigned to innerHTML. Data on this page is supplied by WebRTC usage and is not under third-party control, making this difficult to exploit, but the vulnerability could possibly be used for a cross-site scripting (XSS) attack.|1372509
firefox55|CVE-2017-7783|DOS attack through long username in URL|Amit Sangra|low|If a long user name is used in a username/password combination in a site URL (such as  http://UserName:Password@example.com), the resulting modal prompt will hang in a non-responsive state or crash, causing a denial of service.|1360842
firefox55|CVE-2017-7788|Sandboxed about:srcdoc iframes do not inherit CSP directives|Muneaki Nishimura|low|When an iframe has a sandbox attribute and its content is specified using srcdoc, that content does not inherit the containing page's Content Security Policy (CSP) as it should unless the sandbox attribute included allow-same-origin.|1073952
firefox55|CVE-2017-7789|Failure to enable HSTS when two STS headers are sent for a connection|Muneaki Nishimura|low|If a server sends two Strict-Transport-Security (STS) headers for a single connection, they will be rejected as invalid and HTTP Strict Transport Security (HSTS) will not be enabled for the connection.|1074642
firefox55|CVE-2017-7790|Windows crash reporter reads extra memory for some non-null-terminated registry values|Xiaoyin Liu|low|On Windows systems, if non-null-terminated strings are copied into the crash reporter for some specific registry keys, stack memory data can be copied until a null is found. This can potentially contain private data from the local system. Note: This attack only affects Windows operating systems. Other operating systems are not affected.|1350460
firefox55|CVE-2017-7796|Windows updater can delete any file named update.log|Matt Howell|low|"On Windows systems, the logger run by the Windows updater deletes the file ""update.log"" before it runs in order to write a new log of that name. The path to this file is supplied at the command line to the updater and could be used in concert with another local exploit to delete a different file named ""update.log"" instead of the one intended. Note: This attack only affects Windows operating systems. Other operating systems are not affected."|1234401
firefox55|CVE-2017-7797|Response header name interning leaks across origins|Anne van Kesteren|low|Response header name interning does not have same-origin protections and these headers are stored in a global registry. This allows stored header names to be available cross-origin. |1334776
firefox55|CVE-2017-7780|Memory safety bugs fixed in Firefox 55|Mozilla developers and community|critical|Mozilla developers and community members Gary Kwong, Christian Holler, André Bargull, Bob Clary, Carsten Book, Emilio Cobos Álvarez, Masayuki Nakano, Sebastian Hengst, Franziskus Kiefer, Tyson Smith, and Ronald Crane reported memory safety bugs present in Firefox 54. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 55
firefox55|CVE-2017-7779|Memory safety bugs fixed in Firefox 55 and Firefox ESR 52.3|Mozilla developers and community|critical|Mozilla developers and community members Masayuki Nakano, Gary Kwong, Ronald Crane, Andrew McCreight, Tyson Smith, Bevis Tseng, Christian Holler, Bryce Van Dyk, Dragana Damjanovic, Kartikaya Gupta, Philipp, Tristan Bourvon, and Andi-Bogdan Postelnicu reported memory safety bugs present in Firefox 54 and Firefox ESR 52.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 55 and Firefox ESR 52.3
firefox54|CVE-2017-5472|Use-after-free using destroyed node when regenerating trees|Nils|critical|A use-after-free vulnerability with the frameloader during tree reconstruction while regenerating CSS layout when attempting to use a node in the tree that no longer exists. This results in a potentially exploitable crash.|1365602
firefox54|CVE-2017-7749|Use-after-free during docshell reloading|Nils|high|A use-after-free vulnerability when using an incorrect URL during the reloading of a docshell. This results in a potentially exploitable crash.|1355039
firefox54|CVE-2017-7750|Use-after-free with track elements|Nils|high|A use-after-free vulnerability during video control operations when a <track> element holds a reference to an older window if that window has been replaced in the DOM. This results in a potentially exploitable crash.|1356558
firefox54|CVE-2017-7751|Use-after-free with content viewer listeners|Nils|high|A use-after-free vulnerability with content viewer listeners that results in a potentially exploitable crash.|1363396
firefox54|CVE-2017-7752|Use-after-free with IME input|Nils|moderate|A use-after-free vulnerability during specific user interactions with the input method editor (IME) in some languages due to how events are handled. This results in a potentially exploitable crash but would require specific user interaction to trigger.|1359547
firefox54|CVE-2017-7754|Out-of-bounds read in WebGL with ImageInfo object|Tobias Klein|high|An out-of-bounds read in WebGL with a maliciously crafted ImageInfo object during WebGL operations.|1357090
firefox54|CVE-2017-7755|Privilege escalation through Firefox Installer with same directory DLL files|Yuji Tounai of NTT Communications, Eili Masami of Tachibana Lab|high|The Firefox installer on Windows can be made to load malicious DLL files stored in the same directory as the installer when it is run. This allows privileged execution if the installer is run with elevated privileges. Note: This attack only affects Windows operating systems. Other operating systems are unaffected.|1361326
firefox54|CVE-2017-7756|Use-after-free and use-after-scope logging XHR header errors|Abhishek Arya|high|A use-after-free and use-after-scope vulnerability when logging errors from headers for XML HTTP Requests (XHR). This could result in a potentially exploitable crash.|1366595
firefox54|CVE-2017-7757|Use-after-free in IndexedDB|F. Alonso (revskills)|high|A use-after-free vulnerability in IndexedDB when one of its objects is destroyed in memory while a method on it is still being executed. This results in a potentially exploitable crash.|1356824
firefox54|CVE-2017-7778|Vulnerabilities in the Graphite 2 library|Holger Fuhrmannek, Tyson Smith|high|A number of security vulnerabilities in the Graphite 2 library including out-of-bounds reads, buffer overflow reads and writes, and the use of uninitialized memory. These issues were addressed in Graphite 2 version 1.3.10.|Graphite2 lz4::decompress out of bounds write (CVE-2017-7778)
firefox54|CVE-2017-7758|Out-of-bounds read in Opus encoder|Nicolas Trippar of Zimperium zLabs|high|An out-of-bounds read vulnerability with the Opus encoder when the number of channels in an audio stream changes while the encoder is in use.|1368490
firefox54|CVE-2017-7759|Android intent URLs can cause navigation to local file system|Takeshi Terada|high|Android intent URLs given to Firefox for Android can be used to navigate from HTTP or HTTPS URLs to local file: URLs, allowing for the reading of local data through a violation of same-origin policy. Note: This attack only affects Firefox for Android. Other operating systems are not affected.|1356893
firefox54|CVE-2017-7760|File manipulation and privilege escalation via callback parameter in Mozilla Windows Updater and Maintenance Service|Holger Fuhrmannek|high|The Mozilla Windows updater modifies some files to be updated by reading the original file and applying changes to it. The location of the original file can be altered by a malicious user by passing a special path to the callback parameter through the Mozilla Maintenance Service, allowing the manipulation of files in the installation directory and privilege escalation by manipulating the Mozilla Maintenance Service, which has privileged access. Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.|1348645
firefox54|CVE-2017-7761|File deletion and privilege escalation through Mozilla Maintenance Service helper.exe application|Holger Fuhrmannek|moderate|The Mozilla Maintenance Service helper.exe application creates a temporary directory writable by non-privileged users. When this is combined with creation of a junction (a form of symbolic link), protected files in the target directory of the junction can be deleted by the Mozilla Maintenance Service, which has privileged access. Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.|1215648
firefox54|CVE-2017-7762|Addressbar spoofing in Reader mode|Jun Kokatsu|moderate|When entered directly, Reader Mode did not strip the username and password section of URLs displayed in the addressbar. This can be used for spoofing the domain of the current page.|1358248
firefox54|CVE-2017-7763|Mac fonts render some unicode characters as spaces|Michał Bentkowski|moderate|Default fonts on OS X display some Tibetan characters as whitespace. When used in the addressbar as part of an IDN this can be used for domain name spoofing attacks. Note: This attack only affects OS X operating systems. Other operating systems are unaffected.|1360309
firefox54|CVE-2017-7764|Domain spoofing with combination of Canadian Syllabics and other unicode blocks|Samuel Erb|moderate|"Characters from the ""Canadian Syllabics"" unicode block can be mixed with characters from other unicode blocks in the addressbar instead of being rendered as their raw ""punycode"" form, allowing for domain name spoofing attacks through character confusion. The current Unicode standard allows characters from ""Aspirational Use Scripts"" such as Canadian Syllabics to be mixed with Latin characters in the ""moderately restrictive"" IDN profile. We have changed Firefox behavior to match the upcoming Unicode version 10.0 which removes this category and treats them as ""Limited Use Scripts."" "|1364283
firefox54|CVE-2017-7765|Mark of the Web bypass when saving executable files|Jonathan Birch and Microsoft Vulnerability Research|moderate|"The ""Mark of the Web"" was not correctly saved on Windows when files with very long names were downloaded from the Internet. Without the Mark of the Web data, the security warning that Windows displays before running executables downloaded from the Internet is not shown. Note: This attack only affects Windows operating systems. Other operating systems are unaffected."|1273265
firefox54|CVE-2017-7766|File execution and privilege escalation through updater.ini, Mozilla Windows Updater, and Mozilla Maintenance Service|Seb Patane|high|An attack using manipulation of updater.ini contents, used by the Mozilla Windows Updater, and privilege escalation through the Mozilla Maintenance Service to allow for arbitrary file execution and deletion by the Maintenance Service, which has privileged access. Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.|1342742
firefox54|CVE-2017-7767|Privilege escalation and arbitrary file overwrites through Mozilla Windows Updater and Mozilla Maintenance Service|Seb Patane|moderate|The Mozilla Maintenance Service can be invoked by an unprivileged user to overwrite arbitrary files with junk data using the Mozilla Windows Updater, which runs with the Maintenance Service's privileged access. Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.|1336964
firefox54|CVE-2017-7768|32 byte arbitrary file read through Mozilla Maintenance Service|Seb Patane|moderate|The Mozilla Maintenance Service can be invoked by an unprivileged user to read 32 bytes of any arbitrary file on the local system by convincing the service that it is reading a status file provided by the Mozilla Windows Updater. The Mozilla Maintenance Service executes with privileged access, bypassing system protections against unprivileged users. Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.|1336979
firefox54|CVE-2017-7770|Addressbar spoofing with JavaScript events and fullscreen mode|Jordi Chancel|moderate|A mechanism where when a new tab is loaded through JavaScript events, if fullscreen mode is then entered, the addressbar will not be rendered. This would allow a malicious site to displayed a spoofed addressbar, showing the location of an arbitrary website instead of the one loaded. Note: this issue only affects Firefox for Android. Desktop Firefox is unaffected.|1317242
firefox54|CVE-2017-5471|Memory safety bugs fixed in Firefox 54|Mozilla developers and community|critical|Mozilla developers and community members Mats Palmgren, Philipp, Byron Campen, Christian Holler, Gary Kwong, Benjamin Bouvier, Bob Clary, Jon Coppeard, and Michael Layzell reported memory safety bugs present in Firefox 53. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 54
firefox54|CVE-2017-5470|Memory safety bugs fixed in Firefox 54 and Firefox ESR 52.2|Mozilla developers and community|critical|Mozilla developers and community members Tyson Smith, Mats Palmgren, Philipp, Masayuki Nakano, Christian Holler, Andrew McCreight, Gary Kwong, André Bargull, Carsten Book, Jesse Schwartzentruber, Julian Hector, Marcia Knous, Ronald Crane, and Nils Ohlmeier reported memory safety bugs present in Firefox 53 and Firefox ESR 52.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 54 and Firefox ESR 52.2
firefox53.0.2|CVE-2017-5031|Use after free in ANGLE|Bob Clary, Looben Yang|high|A use-after-free can occur during Buffer11 API calls within the ANGLE graphics library, used for WebGL content. This can lead to a potentially exploitable crash. Note: This issue is in libGLES, which is only in use on Windows. Other operating systems are not affected.|1328762
firefox53|CVE-2017-5433|Use-after-free in SMIL animation functions|Nils|critical|A use-after-free vulnerability in SMIL animation functions occurs when pointers to animation elements in an array are dropped from the animation controller while still in use. This results in a potentially exploitable crash.|1347168
firefox53|CVE-2017-5435|Use-after-free during transaction processing in the editor|Nils|critical|A use-after-free vulnerability occurs during transaction processing in the editor during design mode interactions. This results in a potentially exploitable crash.|1350683
firefox53|CVE-2017-5436|Out-of-bounds write with malicious font in Graphite 2|Holger Fuhrmannek|critical|An out-of-bounds write in the Graphite 2 library triggered with a maliciously crafted Graphite font. This results in a potentially exploitable crash. This issue was fixed in the Graphite 2 library as well as Mozilla products.|1345461
firefox53|CVE-2017-5461|Out-of-bounds write in Base64 encoding in NSS|Ronald Crane|critical|An out-of-bounds write during Base64 decoding operation in the Network Security Services (NSS) library due to insufficient memory being allocated to the buffer. This results in a potentially exploitable crash. The NSS library has been updated to fix this issue to address this issue and Firefox 53 has been updated with NSS version 3.29.5.|1344380
firefox53|CVE-2017-5459|Buffer overflow in WebGL|Atte Kettunen|critical|A buffer overflow in WebGL triggerable by web content, resulting in a potentially exploitable crash.|1333858
firefox53|CVE-2017-5466|Origin confusion when reloading isolated data:text/html URL|Takeshi Terada|critical|If a page is loaded from an original site through a hyperlink and contains a redirect to a data:text/html URL, triggering a reload will run the reloaded data:text/html page with its origin set incorrectly. This allows for a cross-site scripting (XSS) attack.|1353975
firefox53|CVE-2017-5434|Use-after-free during focus handling|Nils|high|A use-after-free vulnerability occurs when redirecting focus handling which results in a potentially exploitable crash.|1349946
firefox53|CVE-2017-5432|Use-after-free in text input selection|Nils|high|A use-after-free vulnerability occurs during certain text input selection resulting in a potentially exploitable crash.|1346654
firefox53|CVE-2017-5460|Use-after-free in frame selection|Nils|high|A use-after-free vulnerability in frame selection triggered by a combination of malicious script content and key presses by a user. This results in a potentially exploitable crash.|1343642
firefox53|CVE-2017-5438|Use-after-free in nsAutoPtr during XSLT processing|Nicolas Grégoire|high|A use-after-free vulnerability during XSLT processing due to the result handler being held by a freed handler during handling. This results in a potentially exploitable crash.|1336828
firefox53|CVE-2017-5439|Use-after-free in nsTArray Length() during XSLT processing|Nicolas Grégoire|high|A use-after-free vulnerability during XSLT processing due to poor handling of template parameters. This results in a potentially exploitable crash.|1336830
firefox53|CVE-2017-5440|Use-after-free in txExecutionState destructor during XSLT processing|Nicolas Grégoire|high|A use-after-free vulnerability during XSLT processing due to a failure to propagate error conditions during matching while evaluating context, leading to objects being used when they no longer exist. This results in a potentially exploitable crash.|1336832
firefox53|CVE-2017-5441|Use-after-free with selection during scroll events|Nils|high|A use-after-free vulnerability when holding a selection during scroll events. This results in a potentially exploitable crash.|1343795
firefox53|CVE-2017-5442|Use-after-free during style changes|Nils|high|A use-after-free vulnerability during changes in style when manipulating DOM elements. This results in a potentially exploitable crash.|1347979
firefox53|CVE-2017-5464|Memory corruption with accessibility and DOM manipulation|Nils|high|During DOM manipulations of the accessibility tree through script, the DOM tree can become out of sync with the accessibility tree, leading to memory corruption and a potentially exploitable crash. |1347075
firefox53|CVE-2017-5443|Out-of-bounds write during BinHex decoding|Chamal De Silva|high|An out-of-bounds write vulnerability while decoding improperly formed BinHex format archives.|1342661
firefox53|CVE-2017-5444|Buffer overflow while parsing application/http-index-format content|Chamal De Silva|high|A buffer overflow vulnerability while parsing application/http-index-format format content when the header contains improperly formatted data. This allows for an out-of-bounds read of data from memory.|1344461
firefox53|CVE-2017-5446|Out-of-bounds read when HTTP/2 DATA frames are sent with incorrect data|Chun Han Hsiao|high|An out-of-bounds read when an HTTP/2 connection to a servers sends DATA frames with incorrect data content. This leads to a potentially exploitable crash. |1343505
firefox53|CVE-2017-5447|Out-of-bounds read during glyph processing|Ivan Fratric of Google Project Zero|high|An out-of-bounds read during the processing of glyph widths during text layout. This results in a potentially exploitable crash and could allow an attacker to read otherwise inaccessible memory. |1343552
firefox53|CVE-2017-5465|Out-of-bounds read in ConvolvePixel|Ivan Fratric of Google Project Zero|high|An out-of-bounds read while processing SVG content in ConvolvePixel. This results in a crash and also allows for otherwise inaccessible memory being copied into SVG graphic content, which could then displayed.|1347617
firefox53|CVE-2017-5448|Out-of-bounds write in ClearKeyDecryptor|Anonymous working with Trend Micro's Zero Day Initiative|high|An out-of-bounds write in ClearKeyDecryptor while decrypting some Clearkey-encrypted media content. The ClearKeyDecryptor code runs within the  Gecko Media Plugin (GMP) sandbox. If a second mechanism is found to escape the sandbox, this vulnerability allows for the writing of arbitrary data within memory, resulting in a potentially exploitable crash.|1346648
firefox53|CVE-2016-10196|Vulnerabilities in Libevent library|Huzaifa Sidhpurwala|high|Three vulnerabilities were reported in the Libevent library that allow for out-of-bounds reads and denial of service (DoS) attacks. These were fixed in the Libevent library and these changes were ported to Mozilla code.|1343453
firefox53|CVE-2017-5454|Sandbox escape allowing file system read access through file picker|Haik Aftandilian|high|A mechanism to bypass file system access protections in the sandbox to use the file picker to access different files than those selected in the file picker through the use of relative paths. This allows for read only access to the local file system.|1349276
firefox53|CVE-2017-5455|Sandbox escape through internal feed reader APIs|Paul Theriault|high|The internal feed reader APIs that crossed the sandbox barrier allowed for a sandbox escape and escalation of privilege if combined with another vulnerability that resulted in remote code execution inside the sandboxed process. |1341191
firefox53|CVE-2017-5456|Sandbox escape allowing local file system access|Julian Hector|high|A mechanism to bypass file system access protections in the sandbox using the file system request constructor through an IPC message. This allows for read and write access to the local file system.|1344415
firefox53|CVE-2017-5469|Potential Buffer overflow in flex-generated code|Petr Cerny|high|Fixed potential buffer overflows in generated Firefox code due to CVE-2016-6354 issue in Flex.|1292534
firefox53|CVE-2017-5445|Uninitialized values used while parsing application/http-index-format content|Chamal De Silva|moderate|A vulnerability while parsing application/http-index-format format content where uninitialized values are used to create an array. This could allow the reading of uninitialized memory into the arrays affected.|1344467
firefox53|CVE-2017-5449|Crash during bidirectional unicode manipulation with animation|Nils|moderate|A possibly exploitable crash triggered during layout and manipulation of bidirectional unicode text in concert with CSS animations.|1340127
firefox53|CVE-2017-5450|Addressbar spoofing using javascript: URI on Firefox for Android|Haosheng Wang|moderate|A mechanism to spoof the Firefox for Android addressbar using a javascript: URI. On Firefox for Android, the base domain is parsed incorrectly, making the resulting location less visibly a spoofed site and showing an incorrect domain in appended notifications.|1325955
firefox53|CVE-2017-5451|Addressbar spoofing with onblur event|Jordi Chancel|moderate|A mechanism to spoof the addressbar through the user interaction on the addressbar and the onblur event. The event could be used by script to affect text display to make the loaded site appear to be different from the one actually loaded within the addressbar.|1273537
firefox53|CVE-2017-5462|DRBG flaw in NSS|Vladimir Klebanov, Franziskus Kiefer|moderate|A flaw in DRBG number generation within the Network Security Services (NSS) library where the internal state V does not correctly carry bits over. The NSS library has been updated to fix this issue to address this issue and Firefox 53 has been updated with NSS version 3.29.5.|1345089
firefox53|CVE-2017-5463|Addressbar spoofing through reader view on Firefox for Android|Muneaki Nishimura|moderate|Android intents can be used to launch Firefox for Android in reader mode with a user specified URL. This allows an attacker to spoof the contents of the addressbar as displayed to users. Note: This attack only affects Firefox for Android. Other operating systems are not affected.|1338867
firefox53|CVE-2017-5467|Memory corruption when drawing Skia content|Heather Miller of Google Skia team|moderate|A potential memory corruption and crash when using Skia content when drawing content outside of the bounds of a clipping region.|1347262
firefox53|CVE-2017-5452|Addressbar spoofing during scrolling with editable content on Firefox for Android|Jordi Chancel|low|Malicious sites can display a spoofed addressbar on a page when the existing location bar on the new page is scrolled out of view if an HTML editable page element is user selected. Note: This attack only affects Firefox for Android. Other operating systems are not affected.|1344517
firefox53|CVE-2017-5453|HTML injection into RSS Reader feed preview page through TITLE element|Jose María Acuña|low|A mechanism to inject static HTML into the RSS reader preview page due to a failure to escape characters sent as URL parameters for a feed's TITLE element. This vulnerability allows for spoofing but no scripted content can be run.|1321247
firefox53|CVE-2017-5458|Drag and drop of javascript: URLs can allow for self-XSS|Daniel Veditz|low|When a javascript: URL is drag and dropped by a user into the addressbar, the URL will be processed and executed. This allows for users to be socially engineered to execute an XSS attack on themselves.|1229426
firefox53|CVE-2017-5468|Incorrect ownership model for Private Browsing information|Anonymous|low|An issue with incorrect ownership model of privateBrowsing information exposed through developer tools. This can result in a non-exploitable crash when manually triggered during debugging. |1329521
firefox53|CVE-2017-5430|Memory safety bugs fixed in Firefox 53 and Firefox ESR 52.1|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Jon Coppeard, Milan Sreckovic, Tyson Smith, Ronald Crane, Randell Jesup, Philipp, Tooru Fujisawa, and Kan-Ru Chen reported memory safety bugs present in Firefox 52 and Firefox ESR 52. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 53 and Firefox ESR 52.1
firefox53|CVE-2017-5429|Memory safety bugs fixed in Firefox 53, Firefox ESR 45.9, and Firefox ESR 52.1|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Jon Coppeard, Marcia Knous, David Baron, Mats Palmgren, Ronald Crane, Bob Clary, and Chris Peterson reported memory safety bugs present in Firefox 52, Firefox ESR 45.8, and Firefox ESR 52. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 53, Firefox ESR 45.9, and Firefox ESR 52.1
firefox52.0.1|CVE-2017-5428|integer overflow in createImageBitmap()|Chaitin Security Research Lab via Trend Micro's Zero Day Initiative|critical|An integer overflow in createImageBitmap() was reported through the Pwn2Own contest. The fix for this vulnerability disables the experimental extensions to the createImageBitmap API. This function runs in the content sandbox, requiring a second vulnerability to compromise a user's computer.|1348168
firefox52|CVE-2017-5400|asm.js JIT-spray bypass of ASLR and DEP|Rh0|critical|JIT-spray targeting asm.js combined with a heap spray allows for a bypass of ASLR and DEP protections leading to potential memory corruption attacks.|1334933
firefox52|CVE-2017-5401|Memory Corruption when handling ErrorResult|Anton Eliasson|critical|A crash triggerable by web content in which an ErrorResult references unassigned memory due to a logic error. The resulting crash may be exploitable.|1328861
firefox52|CVE-2017-5402|Use-after-free working with events in FontFace objects|Nils|critical|A use-after-free can occur when events are fired for a FontFace object after the object has been already been destroyed while working with fonts. This results in a potentially exploitable crash.|1334876
firefox52|CVE-2017-5403|Use-after-free using addRange to add range to an incorrect root object|Nils|critical|When adding a range to an object in the DOM, it is possible to use addRange to add the range to an incorrect root object. This triggers a use-after-free, resulting in a potentially exploitable crash.|1340186
firefox52|CVE-2017-5404|Use-after-free working with ranges in selections|Ivan Fratric of Google Project Zero|critical|A use-after-free error can occur when manipulating ranges in selections with one node inside a native anonymous tree and one node outside of it. This results in a potentially exploitable crash.|1340138
firefox52|CVE-2017-5406|Segmentation fault in Skia with canvas operations|Atte Kettunen|high|A segmentation fault can occur in the Skia graphics library during some canvas operations due to issues with mask/clip intersection and empty masks.|1306890
firefox52|CVE-2017-5407|Pixel and history stealing via floating-point timing side channel with SVG filters|David Kohlbrenner|high|Using SVG filters that don't use the fixed point math implementation on a target iframe, a malicious page can extract pixel values from a targeted user. This can be used to extract history information and read text values across domains. This violates same-origin policy and leads to information disclosure.|1336622
firefox52|CVE-2017-5410|Memory corruption during JavaScript garbage collection incremental sweeping|Jerri Rice|high|Memory corruption resulting in a potentially exploitable crash during garbage collection of JavaScript due errors in how incremental sweeping is managed for memory cleanup.|1330687
firefox52|CVE-2017-5411|Use-after-free in Buffer Storage in libGLES|Looben Yang|high|A use-after-free can occur during buffer storage operations within the ANGLE graphics library, used for WebGL content. The buffer storage can be freed while still in use in some circumstances, leading to a potentially exploitable crash. Note: This issue is in libGLES, which is only in use on Windows. Other operating systems are not affected.|1325511
firefox52|CVE-2017-5409|File deletion via callback parameter in Mozilla Windows Updater and Maintenance Service|Holger Fuhrmannek|moderate|The Mozilla Windows updater can be called by a non-privileged user to delete an arbitrary local file by passing a special path to the callback parameter through the Mozilla Maintenance Service, which has privileged access. Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.|1321814
firefox52|CVE-2017-5408|Cross-origin reading of video captions in violation of CORS|Eric Lawrence of Chrome Security|moderate|Video files loaded video captions cross-origin without checking for the presence of  CORS headers permitting such cross-origin use, leading to potential information disclosure for video captions.|1313711
firefox52|CVE-2017-5412|Buffer overflow read in SVG filters|Atte Kettunen|moderate|A buffer overflow read during SVG filter color value operations, resulting in data exposure. |1328323
firefox52|CVE-2017-5413|Segmentation fault during bidirectional operations|Atte Kettunen|moderate|A segmentation fault can occur during some bidirectional layout operations.|1337504
firefox52|CVE-2017-5414|File picker can choose incorrect default directory|Abdulrahman Alqabandi|moderate|The file picker dialog can choose and display the wrong local default directory when instantiated. On some operating systems, this can lead to information disclosure, such as the operating system or the local account name.|1319370
firefox52|CVE-2017-5415|Addressbar spoofing through blob URL|Abdulrahman Alqabandi|moderate|An attack can use a blob URL and script to spoof an arbitrary addressbar URL prefaced by blob: as the protocol, leading to user confusion and further spoofing attacks.|1321719
firefox52|CVE-2017-5416|Null dereference crash in HttpChannel|Radek 'sysKin' Czyz|moderate|In certain circumstances a networking event listener can be prematurely released. This appears to result in a null dereference in practice. |1328121
firefox52|CVE-2017-5417|Addressbar spoofing by draging and dropping URLs|Michal Zalewski|moderate|When dragging content from the primary browser pane to the addressbar on a malicious site, it is possible to change the addressbar so that the displayed location following navigation does not match the URL of the newly loaded page. This allows for spoofing attacks.|791597
firefox52|CVE-2017-5425|Overly permissive Gecko Media Plugin sandbox regular expression access|Haik Aftandilian|moderate|The Gecko Media Plugin sandbox allows access to local files that match specific regular expressions. On OS OX, this matching allows access to some data in subdirectories of /private/var that could expose personal or temporary data. This has been updated to not allow access to /private/var and its subdirectories. Note: this issue only affects OS X. Other operating systems are not affected.|1322716
firefox52|CVE-2017-5426|Gecko Media Plugin sandbox is not started if seccomp-bpf filter is running|Jed Davis|moderate|On Linux, if the secure computing mode BPF (seccomp-bpf) filter is running when the Gecko Media Plugin sandbox is started, the sandbox fails to be applied and items that would run within the sandbox are run protected only by the running filter which is typically weak compared to the sandbox. Note: this issue only affects Linux. Other operating systems are not affected.|1257361
firefox52|CVE-2017-5427|Non-existent chrome.manifest file loaded during startup|Mike Kaply|moderate|A non-existent chrome.manifest file will attempt to be loaded during startup from the primary installation directory. If a malicious user with local access puts chrome.manifest and other referenced files in this directory, they will be loaded and activated during startup. This could result in malicious software being added without consent or modification of referenced installed files.|1295542
firefox52|CVE-2017-5418|Out of bounds read when parsing HTTP digest authorization responses|Anonymous|low|An out of bounds read error occurs when parsing some HTTP digest authorization responses, resulting in information leakage through the reading of random memory containing matches to specifically set patterns.|1338876
firefox52|CVE-2017-5419|Repeated authentication prompts lead to DOS attack|Chris Hamono|low|If a malicious site repeatedly triggers a modal authentication prompt, eventually the browser UI will become non-responsive, requiring shutdown through the operating system. This is a denial of service (DOS) attack.|1312243
firefox52|CVE-2017-5420|Javascript: URLs can obfuscate addressbar location|Abdulrahman Alqabandi|low|A javascript: url loaded by a malicious page can obfuscate its location by blanking the URL displayed in the addressbar, allowing for an attacker to spoof an existing page without the malicious page's address being displayed correctly.|1284395
firefox52|CVE-2017-5405|FTP response codes can cause use of uninitialized values for ports|Anonymous|low|Certain response codes in FTP connections can result in the use of uninitialized values for ports in FTP operations.|1336699
firefox52|CVE-2017-5421|Print preview spoofing|Abdulrahman Alqabandi|low|A malicious site could spoof the contents of the print preview window if popup windows are enabled, resulting in user confusion of what site is currently loaded.|1301876
firefox52|CVE-2017-5422|DOS attack by using view-source: protocol repeatedly in one hyperlink|Alex Bolton|low|If a malicious site uses the view-source: protocol in a series within a single hyperlink, it can trigger a non-exploitable browser crash when the hyperlink is selected. This was fixed by no longer making view-source: linkable.|1295002
firefox52|CVE-2017-5399|Memory safety bugs fixed in Firefox 52|Mozilla developers and community|critical|Mozilla developers and community members Carsten Book, Calixte Denizet, Christian Holler, Andrew McCreight, David Bolter, David Keeler, Jon Coppeard, Tyson Smith, Ronald Crane, Tooru Fujisawa, Ben Kelly, Bob Owen, Jed Davis, Julian Seward, Julian Hector, Philipp, Markus Stange, and  André Bargull reported memory safety bugs present in Firefox 51. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 52
firefox52|CVE-2017-5398|Memory safety bugs fixed in Firefox 52 and Firefox ESR 45.8|Mozilla developers and community|critical|Mozilla developers and community members Boris Zbarsky, Christian Holler, Honza Bambas, Jon Coppeard, Randell Jesup, André Bargull, Kan-Ru Chen, and Nathan Froyd reported memory safety bugs present in Firefox 51 and Firefox ESR 45.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 52 and Firefox ESR 45.8
firefox51.0.3|CVE-2017-5397|Firefox for Android cache directory is world writable|Jim Chen|critical|The cache directory on the local file system is set to be world writable. Firefox defaults to extracting libraries from this cache. This allows for the possibility of an installed malicious application or tools with write access to the file system to replace files used by Firefox with their own versions.|1337304
firefox51|CVE-2017-5375|Excessive JIT code allocation allows bypass of ASLR and DEP|Rh0|critical|JIT code allocation can allow for a bypass of ASLR and DEP protections leading to potential memory corruption attacks.|1325200
firefox51|CVE-2017-5376|Use-after-free in XSL|Nicolas Grégoire|critical|Use-after-free while manipulating XSL in XSLT documents|1311687
firefox51|CVE-2017-5377|Memory corruption with transforms to create gradients in Skia|Atte Kettunen|critical|A memory corruption vulnerability in Skia that can occur when using transforms to make gradients, resulting in a potentially exploitable crash.|1306883
firefox51|CVE-2017-5378|Pointer and frame data leakage of Javascript objects|Jann Horn|high|Hashed codes of JavaScript objects are shared between pages. This allows for pointer leaks because an object’s address can be discovered through hash codes, and also allows for data leakage of an object’s content using these hash codes.|1312001
firefox51|CVE-2017-5379|Use-after-free in Web Animations|Nils|high|Use-after-free vulnerability in Web Animations when interacting with cycle collection found through fuzzing.|1309198
firefox51|CVE-2017-5380|Potential use-after-free during DOM manipulations|Nils|high|A potential use-after-free found through fuzzing during DOM manipulation of SVG content. |1322107
firefox51|CVE-2017-5390|Insecure communication methods in Developer Tools JSON viewer|Jerri Rice|high|The JSON viewer in the Developer Tools uses insecure methods to create a communication channel for copying and viewing JSON or HTTP headers data, allowing for potential privilege escalation.|1297361
firefox51|CVE-2017-5389|WebExtensions can install additional add-ons via modified host requests|Kris Maglione|high|WebExtensions could use the mozAddonManager API by modifying the CSP headers on sites with the appropriate permissions and then using host requests to redirect script loads to a malicious site. This allows a malicious extension to then install additional extensions without explicit user permission.|1308688
firefox51|CVE-2017-5396|Use-after-free with Media Decoder|Filipe Gomes|high|A use-after-free vulnerability in the Media Decoder when working with media files when some events are fired after the media elements are freed from memory.|1329403
firefox51|CVE-2017-5381|Certificate Viewer exporting can be used to navigate and save to arbitrary filesystem locations|Jann Horn|moderate|"The ""export"" function in the Certificate Viewer can force local filesystem navigation when the ""common name"" in a certificate contains slashes, allowing certificate content to be saved in unsafe locations with an arbitrary filename."|1017616
firefox51|CVE-2017-5382|Feed preview can expose privileged content errors and exceptions|Jerri Rice|moderate|Feed preview for RSS feeds can be used to capture errors and exceptions generated by privileged content, allowing for the exposure of internal information not meant to be seen by web content.|1295322
firefox51|CVE-2017-5383|Location bar spoofing with unicode characters|Armin Razmjou|moderate|URLs containing certain unicode glyphs for alternative hyphens and quotes do not properly trigger punycode display, allowing for domain name spoofing attacks in the location bar.|1323338
firefox51|CVE-2017-5384|Information disclosure via Proxy Auto-Config (PAC)|Paul Stone, Alex Chapman|moderate|Proxy Auto-Config (PAC) files can specify a JavaScript function called for all URL requests with the full URL path which exposes more information than would be sent to the proxy itself in the case of HTTPS. Normally the Proxy Auto-Config file is specified by the user or machine owner and presumed to be non-malicious, but if a user has enabled Web Proxy Auto Detect (WPAD) this file can be served remotely.|1255474
firefox51|CVE-2017-5385|Data sent in multipart channels ignores referrer-policy response headers|Muneaki Nishimura|moderate|Data sent with in multipart channels, such as the multipart/x-mixed-replace MIME type, will ignore the referrer-policy response header, leading to potential information disclosure for sites using this header.|1295945
firefox51|CVE-2017-5386|WebExtensions can use data: protocol to affect other extensions|Muneaki Nishimura|moderate|WebExtension scripts can use the data: protocol to affect pages loaded by other web extensions using this protocol, leading to potential data disclosure or privilege escalation in affected extensions. |1319070
firefox51|CVE-2017-5394|Android location bar spoofing using fullscreen and JavaScript events|Jordi Chancel|moderate|A location bar spoofing attack where the location bar of loaded page will be shown over the content of another tab due to a series of JavaScript events combined with fullscreen mode. Note: This issue only affects Firefox for Android. Other operating systems are not affected.|1222798
firefox51|CVE-2017-5391|Content about: pages can load privileged about: pages|Jerri Rice|moderate|Special about: pages used by web content, such as RSS feeds, can load privileged about: pages in an iframe. If a content-injection bug were found in one of those pages this could allow for potential privilege escalation.|1309310
firefox51|CVE-2017-5392|Weak references using multiple threads on weak proxy objects lead to unsafe memory usage|Honza Bambas|moderate|Weak proxy objects have weak references on multiple threads when they should only have them on one, resulting in incorrect memory usage and corruption, which leads to potentially exploitable crashes. Note: This issue only affects Firefox for Android. Other operating systems are not affected.|1293709
firefox51|CVE-2017-5393|Remove addons.mozilla.org CDN from whitelist for mozAddonManager|Stuart Colville|moderate|The mozAddonManager allows for the installation of extensions from the CDN for addons.mozilla.org, a publicly accessible site. This could allow malicious extensions to install additional extensions from the CDN in combination with an XSS attack on Mozilla AMO sites. |1309282
firefox51|CVE-2017-5395|Android location bar spoofing during scrolling|Jordi Chancel|low|Malicious sites can display a spoofed location bar on a subsequently loaded page when the existing location bar on the new page is scrolled out of view if navigations between pages can be timed correctly. Note: This issue only affects Firefox for Android. Other operating systems are not affected.|1293463
firefox51|CVE-2017-5387|Disclosure of local file existence through TRACK tag error messages|Mustafa Hasan|low|The existence of a specifically requested local file can be found due to the double firing of the onerror when the source attribute on a  <track> tag refers to a file that does not exist if the source page is loaded locally.|1295023
firefox51|CVE-2017-5388|WebRTC can be used to generate a large amount of UDP traffic for DDOS attacks|Cullen Jennings|low|A STUN server in conjunction with a large number of webkitRTCPeerConnection objects can be used to send large STUN packets in a short period of time due to a lack of rate limiting being applied on e10s systems, allowing for a denial of service attack. |1281482
firefox51|CVE-2017-5374|Memory safety bugs fixed in Firefox 51|Mozilla developers and community|critical|Mozilla developers and community members Gary Kwong, Olli Pettay, Tooru Fujisawa, Carsten Book, Andrew McCreight, Chris Pearce, Ronald Crane, Jan de Mooij, Julian Seward, Nicolas Pierron, Randell Jesup, Esther Monchari, Honza Bambas, and Philipp reported memory safety bugs present in Firefox 50.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 51
firefox51|CVE-2017-5373|Memory safety bugs fixed in Firefox 51 and Firefox ESR 45.7|Mozilla developers and community|critical|Mozilla developers and community members Christian Holler, Gary Kwong, André Bargull, Jan de Mooij, Tom Schuster, and Oriol reported memory safety bugs present in Firefox 50.1 and Firefox ESR 45.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 51 and Firefox ESR 45.7
firefox50.1|CVE-2016-9894|Buffer overflow in SkiaGL|Atte Kettunen|critical|A buffer overflow in SkiaGl caused when a GrGLBuffer is truncated during allocation. Later writers will overflow the buffer, resulting in a potentially exploitable crash.|1306628
firefox50.1|CVE-2016-9899|Use-after-free while manipulating DOM events and audio elements|echo|critical|Use-after-free while manipulating DOM events and removing audio elements due to errors in the handling of node adoption.|1317409
firefox50.1|CVE-2016-9895|CSP bypass using marquee tag|Andrew Krasichkov|high|Event handlers on marquee elements were executed despite a strict Content Security Policy (CSP) that disallowed inline JavaScript.|1312272
firefox50.1|CVE-2016-9896|Use-after-free with WebVR|Filipe Gomes|high|Use-after-free while manipulating the navigator object within WebVR. Note: WebVR is not currently enabled by default.|1315543
firefox50.1|CVE-2016-9897|Memory corruption in libGLES|Aral|high|Memory corruption resulting in a potentially exploitable crash during WebGL functions using a vector constructor with a varying array within libGLES.|1301381
firefox50.1|CVE-2016-9898|Use-after-free in Editor while manipulating DOM subtrees|Nils|high|Use-after-free resulting in potentially exploitable crash when manipulating DOM subtrees in the Editor.|1314442
firefox50.1|CVE-2016-9900|Restricted external resources can be loaded by SVG images through data URLs|insertscript|high|External resources that should be blocked when loaded by SVG images can bypass security restrictions through the use of data: URLs. This could allow for cross-domain data leakage.|1319122
firefox50.1|CVE-2016-9904|Cross-origin information leak in shared atoms|Jann Horn|high|An attacker could use a JavaScript Map/Set timing attack to determine whether an atom is used by another compartment/zone in specific contexts. This could be used to leak information, such as usernames embedded in JavaScript code, across websites.|1317936
firefox50.1|CVE-2016-9901|Data from Pocket server improperly sanitized before execution|Wladimir Palant|moderate|HTML tags received from the Pocket server will be processed without sanitization and any JavaScript code executed will be run in the about:pocket-saved (unprivileged) page, giving it access to Pocket's messaging API through HTML injection.|1320057
firefox50.1|CVE-2016-9902|Pocket extension does not validate the origin of events|Wladimir Palant|moderate|The Pocket toolbar button, once activated, listens for events fired from it's own pages but does not verify the origin of incoming events. This allows content from other origins to fire events and inject content and commands into the Pocket context. Note: this issue does not affect users with e10s enabled.|1320039
firefox50.1|CVE-2016-9903|XSS injection vulnerability in add-ons SDK|Kris Maglione|moderate|Mozilla's add-ons SDK had a world-accessible resource with an HTML injection vulnerability. If an additional vulnerability allowed this resource to be loaded as a document it could allow injecting content and script into an add-on's context.|1315435
firefox50.1|CVE-2016-9080|Memory safety bugs fixed in Firefox 50.1|Mozilla developers|critical|Mozilla developers and community members Kan-Ru Chen, Christian Holler, and Tyson Smith reported memory safety bugs present in Firefox 50.0.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 50.1
firefox50.1|CVE-2016-9893|Memory safety bugs fixed in Firefox 50.1 and Firefox ESR 45.6|Mozilla developers|critical|Mozilla developers and community members Jan de Mooij, Iris Hsiao, Christian Holler, Carsten Book, Timothy Nikkel, Christoph Diehl, Olli Pettay, Raymond Forbes, Boris Zbarsky, and Marco Castelluccio reported memory safety bugs present in Firefox 50.0.2 and Firefox ESR 45.5.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 50.1 and Firefox ESR 45.6
firefox50.0.2|CVE-2016-9079|Use-after-free in SVG Animation|Obscured Team|critical|A use-after-free vulnerability in SVG Animation has been discovered. An exploit built on this vulnerability has been discovered in the wild targeting Firefox and Tor Browser users on Windows.|Iterator invalidation in nsSMILTimeContainer::NotifyTimeChange()
firefox50.0.1|CVE-2016-9078|"data: URL can inherit wrong origin after an HTTP redirect
"|Alexander Inführ|critical|Redirection from an HTTP connection to a data: URL assigns the referring site's origin to the data: URL in some circumstances. This can result in same-origin violations against a domain if it loads resources from malicious sites. Cross-origin setting of cookies has been demonstrated without the ability to read them. Note: This issue only affects Firefox 49 and 50.|1317641
firefox50|CVE-2016-5296|Heap-buffer-overflow WRITE in rasterize_edges_1|Abhishek Arya|critical|A heap-buffer-overflow in Cairo when processing SVG content caused by compiler optimization, resulting in a potentially exploitable crash.|1292443
firefox50|CVE-2016-5292|URL parsing causes crash|Daniel Browning|high|During URL parsing, a maliciously crafted URL can cause a potentially exploitable crash.|1288482
firefox50|CVE-2016-5293|Write to arbitrary file with Mozilla Updater and Maintenance Service using updater.log hardlink|Holger Fuhrmannek|high|When the Mozilla Updater is run, if the Updater's log file in the working directory points to a hardlink, data can be appended to an arbitrary local file. This vulnerability requires local system access. Note: this issue only affects Windows operating systems.|1246945
firefox50|CVE-2016-5294|Arbitrary target directory for result files of update process|Holger Fuhrmannek|high|The Mozilla Updater can be made to choose an arbitrary target working directory for output files resulting from the update process. This vulnerability requires local system access. Note: this issue only affects Windows operating systems.|1246972
firefox50|CVE-2016-5297|Incorrect argument length checking in JavaScript|André Bargull|high|An error in argument length checking in JavaScript, leading to potential integer overflows or other bounds checking issues.|1303678
firefox50|CVE-2016-9064|Add-ons update must verify IDs match between current and new versions|Multiple people|high|Add-on updates failed to verify that the add-on ID inside the signed package matched the ID of the add-on being updated. An attacker who could perform a man-in-the-middle attack on the user's connection to the update server and defeat the certificate pinning protection could provide a malicious signed add-on instead of a valid update.|1303418
firefox50|CVE-2016-9065|Firefox for Android location bar spoofing using fullscreen|Raphael|high|The location bar in Firefox for Android can be spoofed by forcing a user into fullscreen mode, blocking its exiting, and creating of a fake location bar without any user notification. Note: This issue only affects Firefox for Android. Other versions and operating systems are unaffected.|1306696
firefox50|CVE-2016-9066|Integer overflow leading to a buffer overflow in nsScriptLoadHandler|Samuel Groß|high|A buffer overflow resulting in a potentially exploitable crash due to memory allocation issues when handling large amounts of incoming data.|1299686
firefox50|CVE-2016-9067|heap-use-after-free in nsINode::ReplaceOrInsertBefore|Nils|high|Two use-after-free errors during DOM operations resulting in potentially exploitable crashes.|1301777 (CVE-2016-9067)
firefox50|CVE-2016-9068|heap-use-after-free in nsRefreshDriver|Nils|high|A use-after-free during web animations when working with timelines resulting in a potentially exploitable crash.|1302973
firefox50|CVE-2016-9072|64-bit NPAPI sandbox isn't enabled on fresh profile|Bob Owen|high|When a new Firefox profile is created on 64-bit Windows installations, the sandbox for 64-bit NPAPI plugins is not enabled by default. Note: This issue only affects 64-bit Windows. 32-bit Windows and other operating systems are unaffected.|1300083
firefox50|CVE-2016-9075|WebExtensions can access the mozAddonManager API and use it to gain elevated privileges|Kris Maglione|high|An issue where WebExtensions can use the mozAddonManager API to elevate privilege due to privileged pages being allowed in the permissions list. This allows a malicious extension to then install additional extensions without explicit user permission.|1295324
firefox50|CVE-2016-9077|Canvas filters allow feDisplacementMaps to be applied to cross-origin images, allowing timing attacks on them|Markus Stange|high|Canvas allows the use of the feDisplacementMap filter on images loaded cross-origin. The rendering by the filter is variable depending on the input pixel, allowing for timing attacks when the images are loaded from third party locations.|1298552
firefox50|CVE-2016-5291|Same-origin policy violation using local HTML file and saved shortcut file|Yuyang Zhou|moderate|A same-origin policy bypass with local shortcut files to load arbitrary local content from disk.|1292159
firefox50|CVE-2016-5295|Mozilla Maintenance Service: Ability to read arbitrary files as SYSTEM|Holger Fuhrmannek|moderate|This vulnerability allows an attacker to use the Mozilla Maintenance Service to escalate privilege by having the Maintenance Service invoke the Mozilla Updater to run malicious local files. This vulnerability requires local system access and is a variant of MFSA2013-44. Note: this issue only affects Windows operating systems.|1247239
firefox50|CVE-2016-5298|SSL indicator can mislead the user about the real URL visited|Jordi Chancel|moderate|A mechanism where disruption of the loading of a new web page can cause the previous page's favicon and SSL indicator to not be reset when the new page is loaded. Note: this issue only affects Firefox for Android. Desktop Firefox is unaffected.|1227538
firefox50|CVE-2016-5299|Firefox AuthToken in broadcast protected with signature-level permission can be accessed by an application installed beforehand that defines the same permissions|Ken Okuyama|moderate|A previously installed malicious Android application with same signature-level permissions as Firefox can intercept AuthTokens meant for Firefox only. Note: This issue only affects Firefox for Android. Other versions and operating systems are unaffected.|1245791
firefox50|CVE-2016-9061|API key (glocation) in broadcast protected with signature-level permission can be accessed by an application installed beforehand that defines the same permissions|Ken Okuyama|moderate|A previously installed malicious Android application which defines a specific signature-level permissions used by Firefox can access API keys meant for Firefox only. Note: This issue only affects Firefox for Android. Other versions and operating systems are unaffected.|1245795
firefox50|CVE-2016-9062|Private browsing browser traces (Android) in browser.db and wal file|Daniel D.|moderate|Private browsing mode leaves metadata information, such as URLs, for sites visited in browser.db and browser.db-wal files within the Firefox profile after the mode is exited. Note: This issue only affects Firefox for Android. Other versions and operating systems are unaffected.|1294438
firefox50|CVE-2016-9070|Sidebar bookmark can have reference to chrome window|Abdulrahman Alqabandi|moderate|A maliciously crafted page loaded to the sidebar through a bookmark can reference a privileged chrome window and engage in limited JavaScript operations violating cross-origin protections.|1281071
firefox50|CVE-2016-9073|"windows.create schema doesn't specify ""format"": ""relativeUrl""
"|Will Bamberg|moderate|WebExtensions can bypass security checks to load privileged URLs and potentially escape the WebExtension sandbox.|1289273
firefox50|CVE-2016-9074|Insufficient timing side-channel resistance in divSpoiler|Franziskus Kiefer|moderate|An existing mitigation of timing side-channel attacks is insufficient in some circumstances. This issue is addressed in Network Security Services (NSS) 3.26.1.|1293334
firefox50|CVE-2016-9076|select dropdown menu can be used for URL bar spoofing on e10s|Mats Palmgren|moderate|An issue where a <select> dropdown menu can be used to cover location bar content, resulting in potential spoofing attacks. This attack requires e10s to be enabled in order to function.|1276976
firefox50|CVE-2016-9063|Possible integer overflow to fix inside XML_Parse in Expat|Gustavo Grieco|low|An integer overflow during the parsing of XML using the Expat library.|1274777
firefox50|CVE-2016-9071|Probe browser history via HSTS/301 redirect + CSP|Xiaoyin Liu|low|Content Security Policy combined with HTTP to HTTPS redirection can be used by malicious server to verify whether a known site is within a user's browser history.|1285003
firefox50|CVE-2016-5289|Memory safety bugs fixed in Firefox 50|Mozilla developers|critical|Mozilla developers and community members Christian Holler, Andrew McCreight, Dan Minor, Tyson Smith, Jon Coppeard, Jan-Ivar Bruaroey, Jesse Ruderman, and Markus Stange reported memory safety bugs present in Firefox 49. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 50
firefox50|CVE-2016-5290|Memory safety bugs fixed in Firefox 50 and Firefox ESR 45.5|Mozilla developers|critical|Mozilla developers and community members Olli Pettay, Christian Holler, Ehsan Akhgari, Jon Coppeard, Gary Kwong, Tooru Fujisawa, Philipp, and Randell Jesup reported memory safety bugs present in Firefox 49 and Firefox ESR 45.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 50 and Firefox ESR 45.5
firefox49.0.2|CVE-2016-5287|Crash in nsTArray_base&lt;T&gt;::SwapArrayElements|Philipp|high|A potentially exploitable use-after-free crash during actor destruction with service workers. This issue does not affect releases earlier than Firefox 49.|1309823
firefox49.0.2|CVE-2016-5288|Web content can read cache entries|Developers at Cliqz.com|high|A Cliqz.com developer demonstrated that web content could access information in the HTTP cache if e10s is disabled. This can reveal some visited URLs and the contents of those pages. This issue affects Firefox 48 and 49.|1310183
firefox49|CVE-2016-2827|Out-of-bounds read in mozilla::net::IsValidReferrerPolicy|Atte Kettunen|low|A content security policy (CSP) containing a referrer directive with no values can cause a non-exploitable crash.|1289085
firefox49|CVE-2016-5270|Heap-buffer-overflow in nsCaseTransformTextRunFactory::TransformString|Atte Kettunen|high|An out-of-bounds write of a boolean value during text conversion with some unicode characters|1291016
firefox49|CVE-2016-5271|Out-of-bounds read in PropertyProvider::GetSpacingInternal|Abhishek Arya|low|An out-of-bounds read during the processing of text runs in some pages using display:contents.|1288946
firefox49|CVE-2016-5272|Bad cast in nsImageGeometryMixin|Abhishek Arya|high|A bad cast when processing layout with input elements can result in a potentially exploitable crash.|129793
firefox49|CVE-2016-5273|crash in mozilla::a11y::HyperTextAccessible::GetChildOffset|Nils|high|A potentially exploitable crash in accessibility.|1280387
firefox49|CVE-2016-5276|Heap-use-after-free in mozilla::a11y::DocAccessible::ProcessInvalidationList|Nils|high|A use-after-free vulnerability triggered by setting a aria-owns attribute.|1287721
firefox49|CVE-2016-5274|use-after-free in nsFrameManager::CaptureFrameState|Nils|high|A use-after-free issue in web animations during restyling.|1282076
firefox49|CVE-2016-5277|Heap-use-after-free in nsRefreshDriver::Tick|Nils|high|A use-after-free vulnerability with web animations when destroying a timeline.|1291665
firefox49|CVE-2016-5275|Buffer overflow in mozilla::gfx::FilterSupport::ComputeSourceNeededRegions|Nils|critical|A buffer overflow when working with empty filters during canvas rendering.|1287316
firefox49|CVE-2016-5278|Heap-buffer-overflow in nsBMPEncoder::AddImageFrame|Nils|critical|A potentially exploitable crash caused by a buffer overflow while encoding image frames to images.|1294677
firefox49|CVE-2016-5279|Full local path of files is available to web pages after drag and drop|Rafael Gieschke|moderate|The full path to local files is available to scripts when local files are drag and dropped into Firefox.|1249522
firefox49|CVE-2016-5280|Use-after-free in mozilla::nsTextNodeDirectionalityMap::RemoveElementFromMap|Mei Wang|high|Use-after-free vulnerability when changing text direction.|1289970
firefox49|CVE-2016-5281|use-after-free in DOMSVGLength|Brian Carpenter|high|Use-after-free vulnerability when manipulating SVG format content through script.|1284690
firefox49|CVE-2016-5282|Don't allow content to request favicons from non-whitelisted schemes|Richard Newman|moderate|Favicons can be loaded through non-whitelisted protocols, such as jar:.|932335
firefox49|CVE-2016-5283|Iframe src fragment timing attack can reveal cross-origin data|Gavin Sharp|high|A timing attack vulnerability using iframes to potentially reveal private data using document resizes and link colors.|928187
firefox49|CVE-2016-5284|Add-on update site certificate pin expiration|Multiple people|high|"Due to flaws in the process we used to update ""Preloaded Public Key Pinning"" in our releases, the pinning for add-on updates became ineffective in early September. An attacker who was able to get a mis-issued certificate for a Mozilla web site could send malicious add-on updates to users on networks controlled by the attacker. Users who have not installed any add-ons are not affected."|1303127
firefox49|CVE-2016-5256|Memory safety bugs fixed in Firefox 49|Mozilla developers|critical|Mozilla developers Christoph Diehl, Christian Holler, Gary Kwong, Nathan Froyd, Honza Bambas, Seth Fowler, and Michael Smith reported memory safety bugs present in Firefox 48. Some of these bugs showed evidence of memory corruption under certain circumstances could potentially exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 49
firefox49|CVE-2016-5257|Memory safety bugs fixed in Firefox 49 and Firefox ESR 45.4|Mozilla developers|critical|Mozilla developers and community members Christoph Diehl, Andrew McCreight, Dan Minor, Byron Campen, Jon Coppeard, Steve Fink, Tyson Smith, Philipp, and Carsten Book reported memory safety bugs present in Firefox 48 and Firefox ESR 45.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort at least some of these could be exploited to run arbitrary code.|Memory safety bugs fixed in Firefox 49 and Firefox ESR 45.4
