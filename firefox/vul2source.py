'''
extract classes that cause vulnerabilities
'''

import re
import pandas as pd
from git import Repo
import multiprocessing as mp

df = pd.read_csv('C:\\Users\\aqd14\\Documents\\GitHub\\vulnerability-prediction\\firefox\data\\firefox.csv', sep=',')
bug_ids = df['bug_id'].dropna().astype(int).sort_values(ascending = False).tolist()

repo_path = 'C:\\Users\\aqd14\\Documents\\GitHub\\gecko-dev'
repo = Repo(repo_path)


def build_dict(skip):
    print("Starting bugid2commit_{}.csv\n".format(skip))
    """
    Build a dictionary to quickly locate bug id in commmit messages
    :return: a dictionary with key is bug_id and value is changed files
    """
    # d = {}

    ids = []
    files = []
    commit_hashes = []
    committers = []

    g = repo.iter_commits("master", max_count=10000, skip=skip)
    bug_fix = re.compile("^Bug \d+")
    for i, commit in enumerate(g):
        # print("skip = {}, commit = {}\n".format(skip, i))
        result = bug_fix.findall(commit.summary)
        if len(result) > 0:
            changed_list = list(commit.stats.files.keys())
            changed_files = ";".join(changed_list)
            bug_id = result[0].replace("Bug ", "")
            ids.append(bug_id)
            commit_hashes.append(commit.hexsha)
            committers.append(commit.committer)
            files.append(changed_files)
        if i != 0 and i % 999 == 0:
            print("bugid2commit_{}.csv finished {} commits".format(skip, i+1))
    df = pd.DataFrame({
        "id": ids,
        "file": files,
        "commit": commit_hashes,
        "committer": committers
    })

    df.to_csv("bugid2commit_{}.csv".format(skip))
    print("Completed bugid2commit_{}.csv".format(skip))
    # return d


def build_dict_concurrent(num_processes):
    pool = mp.Pool(processes=num_processes)
    pool.map(build_dict, range(10000, 600001, 10000))


if __name__ == "__main__":
    # build_dict_concurrent(20)
    d = dict()

    df = pd.read_csv('data\\bugid2commit.csv')
    for row in df.itertuples():
        d[row.id] = (row.file, row.commit, row.committer)

    ids = []
    files = []
    commit_hashes = []
    committers = []

    for bug_id in bug_ids:
        if bug_id in d:
            ids.append(bug_id)
            items = d[bug_id]
            files.append(items[0])
            commit_hashes.append(items[1])
            committers.append(items[2])

    df = pd.DataFrame({
        "id": ids,
        "file": files,
        "commit": commit_hashes,
        "committer": committers
    })

    df.to_csv("data\\firefox_vul2source.csv")
