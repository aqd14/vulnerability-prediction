'''
extract classes that cause vulnerabilities
'''

import re
import pandas as pd
from git import Git
from git.exc import GitCommandError
import json

def extract_commit_ids(out):
    p = re.compile('commit \w+')
    commits = p.findall(out)
    ids = []
    for commit in commits:
        id = commit.split(None, 1)[1]
        ids.append(id)
    return ids


def extract_revisions(out):
    p = re.compile('git-svn-id: \S+')
    commits = p.findall(out)
    revisions = []
    for commit in commits:
        r = commit.split(None, 1)[1]
        r = r[r.find('trunk@')+6:len(r)]
        revisions.append(r)
    return revisions


def get_class_changed(commit_ids, revisions):
    if isinstance(commit_ids, list) is False:
       commit_ids = [commit_ids];

    r2id = {}
    # id2class = []
    # idx = 0
    for id, r in zip(commit_ids, revisions):
        classes = git.execute(command='git diff-tree --no-commit-id --name-only -r {}'.format(id))
        commit_mes = git.execute(command='git log --format=%s -n 1 {}'.format(id))
        id2class = {id: ([c for c in classes.splitlines()], commit_mes)}

        if r not in r2id:
            r2id[r] = []

        r2id[r].append(id2class)
        # TODO: hello

    print(r2id)
    return r2id


def make_json():
    pass


df = pd.read_csv('tomcat.csv', sep='|')
bug_ids = df['bug_id'].dropna().astype(int).tolist()

git = Git('C:\\Users\\aqd14\\Documents\\GitHub\\tomcat70')

# p = re.compile('commit \w+')

try:
    with open('info.json', mode='w') as f:
        d = dict()
        for id in bug_ids:
            output = git.execute(command='git log --all --grep=https://bz.apache.org/bugzilla/show_bug.cgi?id={}'.format(id))
            print('id = {}'.format(id))
            if not output:
                print('This might not be a fix for bug id = {}'.format(id))
                continue
            # print(output)

            commit_ids = extract_commit_ids(output)
            # print(commit_ids)

            revisions = extract_revisions(output)
            # print(revisions)
            class_info = get_class_changed(commit_ids, revisions)
            d[id] = class_info
            json.dump(d, fp=f, indent=4)

except GitCommandError as e:
    print(e)

# print(commit_id)

# commit_id = 'f8d66f05112239c18ee5bac31ed55f21a2b6527b'
# print(git.execute(command='git diff-tree --no-commit-id --name-only -r {}'.format(commit_id)))
# repo = Repo('C:\\Users\\aqd14\\Documents\\GitHub\\tomcat70')
# print(repo.active_branch)